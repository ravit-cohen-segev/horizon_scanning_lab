,Answer,followerCount,name,upvoteCount,answerCount,answerViews,year,question
0,"Will we ever completely replace mathematics? I doubt it. At least not in the foreseeable future. For the same reasons, I doubt we'll move past programming languages.We might not always realize it, but programming languages are as much tools for thinking and for expressing as they are for directing a computer. Programming languages are a systematic way toWill we ever completely replace mathematics? I doubt it. At least not in the foreseeable future. For the same reasons, I doubt we'll move past programming languages.We might not always realize it, but programming languages are as much tools for thinking and for expressing as they are for directing a computer. Programming languages are a systematic way toThat's going to be useful until computers can do all our thinking for us. And thenHave you ever tried to understand a more complex algorithm or data structure? The description in plain language is useful, of course, and helps you understand the high-level idea and underlying principles involved. But once you need to understandAs long as we ever have to care about things like this, we'll need some sort of programming languages.The same is true if we want to put our own thoughts down unambiguously. Informal specs—like internetIf we ever want to do a better job—I don't know about you, butBy now it should be clear: my view of what a programming langauge is is broad. I don't confine myself to languagesWhat will replace programming languages?More programming languagesLanguages as we have now are limited. Computers are getting better and better and are able to do more and more for us. But as long as we need to express our thoughts in perfectly unambiguous ways, programming languages will exist. And I don't see that going anywhere any time soon, technology advancements notwithstanding.footnotesBut they come much closer than anything short of formal logic. And some of them, at least, are improving.","8,707 followers",Mario Galindo Queralt,808,637,8.8M,2015,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
1,"We will move past programming languages when the machines take over. The reason we need programming languages is, at the very core, Computers, are unable to handle imprecision and ambiguity, and human communication is imprecise and ambiguous.  In fact, it is so imprecise and ambiguous that it needs a human brain to convert it into precise and unambiguous commands. This human brain is sometimes called a programmer, and sometimes a business analystThe day will come the machines start to anticipate all our needs, and all our motivations. The day will come when machines will generate requirementsWe will move past programming languages when the machines take over. The reason we need programming languages is, at the very core, Computers, are unable to handle imprecision and ambiguity, and human communication is imprecise and ambiguous.  In fact, it is so imprecise and ambiguous that it needs a human brain to convert it into precise and unambiguous commands. This human brain is sometimes called a programmer, and sometimes a business analystThe day will come the machines start to anticipate all our needs, and all our motivations. The day will come when machines will generate requirements for themselves. Those requirements will be precise and unambigious, and then there will be no need for programming languages and programmers.","20,848 followers",Alan Mellor,627,12.3K,63.9M,2015,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
2,"If humanity and computing both survive long enough, the answer probably has to be yes, but it does depend on what you want to call a programming language.  It will always be necessary to specify what the program should do.I suspect eventually you will begin programming by giving the computer general instructions, then having it combine that with its banks of general knowledge and with specific information and preferences you have given it in the past, leading it to ask you various clarifying questions until it works out what you want and finally implements it.  That is, you'll program a computIf humanity and computing both survive long enough, the answer probably has to be yes, but it does depend on what you want to call a programming language.  It will always be necessary to specify what the program should do.I suspect eventually you will begin programming by giving the computer general instructions, then having it combine that with its banks of general knowledge and with specific information and preferences you have given it in the past, leading it to ask you various clarifying questions until it works out what you want and finally implements it.  That is, you'll program a computer the way you might tell an employee what to do.","9,706 followers",Tim Mensch,626,3K,18.8M,2015,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
3,"There will always be some programming behind the scenes but technology like Siri and Cortana will continue to mature giving more control to users via normal spoken word commands.Just like using good search criteria in a search engine became a vital skill in fluently navigating the internet, it will become an acquired skill to get the most out of your electronic personal assistant.People will (or already can sort of) be able to get their computers to do things only programmers were able to do by issuing simple voice commands.Needless to say, there will have to be programmers and many lines of cThere will always be some programming behind the scenes but technology like Siri and Cortana will continue to mature giving more control to users via normal spoken word commands.Just like using good search criteria in a search engine became a vital skill in fluently navigating the internet, it will become an acquired skill to get the most out of your electronic personal assistant.People will (or already can sort of) be able to get their computers to do things only programmers were able to do by issuing simple voice commands.Needless to say, there will have to be programmers and many lines of code to make a system like that effective. The actual programming will likely remain a highly esoteric pursuit with a limited number of skilled practitioners.",96 followers,Kevin Hongtongsak,5.6K,0,0,2015,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
4,"Some domains are already past programming languages:The more you care about performance, numerical stability, and correctness, the more you have to care about how the machine in interacting with the representation of your problem.  The more control you need over that representation, the lower the level of programming language you'll use.","5,656 followers",Dave Voorhis,755,6.9K,21.9M,2015,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
5,No. Not as long as there are arrogant new graduates convinced that everything that has previously been done is crap that they can outdo. They will need to develop new languages to develop an appreciation for the efforts of others.I have standing to speak on this topic having personally invented two novel programming languages that live today only in memory.,189 followers,Prashant Kumar,627,63,218.8K,2019,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
6,"Programming languages are becoming more abstract (high-level). So it's easy to imagine them becoming natural human language. Past that, they will become just thoughts that we feed to a machine; and at that stage where we can tap into our thoughts, we'll have used that technology for aritificial telepathy!","56,375 followers",Charlie Cheever,5.9K,1.5K,9.4M,2015,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
7,"C++ may be replaced by another language right after the following events occur:C++ may be replaced by another language right after the following events occur:Well, after all this happens, it is possible (only possible) for some C++ programmers to start thinking about switching to another language.Regards.If this answer was hilarious,",18 followers,Asim Qureshi,2.9K,996,156M,2019,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
8,"I believeThe two big systems programming languages should be familiar to everyone, C and C++. They’re not getting any younger. C is 46 years old and C++ is 33 years old. According to the TIOBE Index, they are the second and third most used programming languages in the world respectively, but they are both on the decline.Rust is an obvious candidate to take some of that huge market share from C and C++. While it can match their blazing fast performance, it offers much better memoI believeThe two big systems programming languages should be familiar to everyone, C and C++. They’re not getting any younger. C is 46 years old and C++ is 33 years old. According to the TIOBE Index, they are the second and third most used programming languages in the world respectively, but they are both on the decline.Rust is an obvious candidate to take some of that huge market share from C and C++. While it can match their blazing fast performance, it offers much better memory and thread safety. It also has a nicer syntax in my humble opinion. While C was a pioneering language in its time, Rust has the advantage of standing on the shoulders of every programming language that has been introduced since.Rust is only in 36th place on TIOBE at the moment, but it’s gaining followers. It has been voted the most loved programming language in developer surveys at Stack Overflow the last three years in a row.Rust actually has surprisingly few opponents in the race to becoming the new systems programming language. I think the developer community has generally underestimated the continued demand for fast, hardware-oriented languages. The focus has been on high-level languages, which many thought would take completely over. With the slowing down of Moore’s law and explosive increase in data volumes, performance has actually becomeWith a slowing down in the increasing number of transistors, we have turned to ever more cores. That means thread safety becomes more important. Again, this is where Rust shines.Rust is also used in Parity, which may become really big if the Ethereum blockchain gains further traction.",492 followers,George Mauer,949,100,1.9M,2018,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
9,Technology CAN DO WONDERS and will definitely help Managers improve their productivity. For exampleTechnology can be a very strong tool to perform the following tasks for a Manager.Technology CAN DO WONDERS and will definitely help Managers improve their productivity. For exampleTechnology can be a very strong tool to perform the following tasks for a Manager.,UNKNOWN,Michael O. Church,2.7K,1.5K,17.5M,2020,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
10,"I would say that for certain jobs more likely than others. Take Uber for example, the drivers and their involvement with the company is essentially managed by Tech.Office managers in the more traditional sense are going to be harder to replace because they own relationships with people whether it is inside or outside the company. So unless the businesses become largely tech driven in the sense that human relationships are irrelevant, it will be difficult for tech to completely replace managers.Perhaps if society becomes more accustomed with tech ,which doesn’t seems so far off, it would seem mI would say that for certain jobs more likely than others. Take Uber for example, the drivers and their involvement with the company is essentially managed by Tech.Office managers in the more traditional sense are going to be harder to replace because they own relationships with people whether it is inside or outside the company. So unless the businesses become largely tech driven in the sense that human relationships are irrelevant, it will be difficult for tech to completely replace managers.Perhaps if society becomes more accustomed with tech ,which doesn’t seems so far off, it would seem more possible and maybe people would even be more compelled to replace manager with tech","2,273 followers",Joseph Misiti,4.3K,209,1.6M,2020,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
11,"Are you talking about creative managers? Or about those people who normally do nothing and forward emails and other information here and there?Second kinds of manager should be replaced by technology. And immediately. We don’t need them.But, the creative managers.We need more of them. I know it is very hard to manage any project and finish it successfully.The manager needs to manage;And one more thing, not everyone can be manager as not everyone can be good teacher.","8,323 followers",Jeff Meyerson,682,340,2.1M,2020,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
12,"Well, technically,Some other answers claim that technology has already been replacing software engineers. Not true at all. Technology has only ever been used as a tool toAnd frankly, in a similar vein,Well, technically,Some other answers claim that technology has already been replacing software engineers. Not true at all. Technology has only ever been used as a tool toAnd frankly, in a similar vein,WhatAnd so today, there are graduates who barely scraped by in their degree, and who aren't actually capable of software engineering, andBack to the question: Software engineering requires human level understanding of the problem you're trying to solve. So does software “management”, especially if you're talking about creative product vision ownership and handling the interfacing with the client. Both fundamentally deal with people problems, and without human levels of learning and understanding, you can't replace either with software.The difference is that software engineering also requires an aptitude for writing software, for systems engineering, for breaking down problems into smaller pieces, for understanding multiple layers of complexity.So in either case we'd need a strong AI (which we're nowhere close to achieving, by the way — probably at least 20-50 years out). But in the software engineer case, we'd need a strong AIThink about it this way: How many stories do you know of software engineers becoming successful managers or product owners? How about the converse? Management is also an acquired skill, but I think it's not as rare as ability to write software. As such it's very likely to be harder for our first attempt at strong AI.That said, the creative aspects of product ownership areI'm just talking about what I've observed, and I'm looking at where salaries have been going for talented software engineers versus talented managers.Granted the historical management salary has been higher than that of the software engineer, but I ascribe that to the fact that the managers have also historically had closer relationships with those higher in the hierarchy. Even more than software, management is notoriously difficult to measure performance in objectively.But the very fact that the trend is reversing, that supply and demand is pushing software wages above management wages, implies to me that the skill of software engineering is more rare among humans than that of managing teams.But that said, we'reAnd if the customers who need software written don't want to talk directly to the AI (which lacks some level of human intelligence in this scenario), then the software engineers with the best people and design skills could be that last level of interfacing between the customer and the “AI software engineers”. Because who better to talk the right language than someone who knows how the sausage is made?So in all cases it's likely that software engineers will be the last job standing before strong AI can do","103,826 followers",Ashish Kedia,4.6K,1.1K,35.7M,2020,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
13,"Interesting question and I’m not sure that I agree with any of the other answers and let me explain why. I probably disagree with the top most upvoted answer the most, but that’s mostly because of the definition applied there and probably more. This will be a long answer, but bear with me, all will be revealed.When I was an university student many years ago, I followed a course of labour economics and the things I’ve learned there I’ve honestly never got to apply at any of my work, but it combined with some history books that I’ve read and some BBC documentaries series that I’ve watched, haveInteresting question and I’m not sure that I agree with any of the other answers and let me explain why. I probably disagree with the top most upvoted answer the most, but that’s mostly because of the definition applied there and probably more. This will be a long answer, but bear with me, all will be revealed.When I was an university student many years ago, I followed a course of labour economics and the things I’ve learned there I’ve honestly never got to apply at any of my work, but it combined with some history books that I’ve read and some BBC documentaries series that I’ve watched, have allowed me to gain some insights, which later I’ll share with you in this answer.But before I do that. Let’s wait a second and consider what technology is defined as. It can be the sum of knowledge, techniques, skills, methods and processes to achieve an objective. Now let me ask the reader this. Who has those? A: people have those.So remember that a resume is not the technology, the person who it is about, is the technology.Here is another quiz question for you. Who wrote the first resume? A: Leonardo da Vinci. More importantly, why did he write it? Da Vinci’s backer and sponsor for a large part of his life was Lorenzo de’ Medici who was involved as a potential victim in the Pazzi conspiracy (1478). Leonardo was to be the ambassador for the Medici towards Ludovico Sforza better known as the Moor (in give or take 1481 or 1482).The first reason why Leonardo wrote down that letter basically, wasn’t because he needed to show what he did, but what he hadn’t done, namely somehow show that he wasn’t involved in the Pazzi conspiracy and the only reason he needed to do that, is because the two men prior hadn’t known eachother personally or couldn’t trustworthy and independently verify through mutual friends, acquaintenances, or kin that that is what they said they had done. The issue primarily lies in the existence of a trustworthy loyal source for Sforza. Though Melzi’s father had worked in the employ of Sforza, he himself (Francesco Melzi) was a pupil of Leonardo. Thus who do you trust? Are you inviting trouble or an opportunity? The first part of the letter is actually quite short and mainly talks briefly about what he witnessed from other masters without actually mentioning who these were. In short it really isn’t much of a resume at all.The second reason why Leonardo did so, is because prior to that, he hadn’t actually finished a lot of his projects. It’s also a fact Leonardo da Vinci lamented about on his own deathbed and there may be reason behind that (he probably had ADD). So what Leonardo in the letter did instead was write a lot about what he could do for Sforza, the ideas he had in his mind and what could be the potential for Sforza if these plans worked. If you read the letter, it mostly talks a lot about bridges, buildings and siege engines he could make and he finishes the letter with that he is willing to demonstrate his abilities if Sforza has any further doubts.Another quick question. Do you know the maximum time recruiters spend on reading a resume? Maximum it is about 1 minute. Usually it is about 7 seconds. Meaning, they are not really reading it!The resume ladies and gentlemen is probably about the second most useless document you’ll ever write in your entire lifetime, probably after a TPS report with or without cover sheets.Now on to the labour economics. Labour economists at macro level have looked at the odds of people acquiring a job. For example. It turns out that if you are higher educated you have a greater chance getting a job than a lower educated person. University graduates generally have a lower chance of unemployment than those with a vocational education.Next are examples of certain studies or skills and how much they are sought after. If you are veterinary assistant, game developer, or studied communications and multimedia design you have about a 1% employment rate. You might as well go straight for the public employment agency and ask for social assistance benefit in that case. A translator with a university degree has about an 78% employment rate. If you studied archeology, only about 10% find long term employment. A law degree generally has a good employment rate, unless it is administrative law which also has a low employment rate. If you studied medicine, only about 2% become unemployed, usually when that is the case, there is often times something going on, like a physical handicap, disorder, or indeed a mental illness (yes doctors can be ill too). Oddly enough it is the long term unemployed in such fields that supposed to have a good employment rate, that give the other unemployed a bad name. Pharmacy doesn’t have such a good employment rate as many folks think and many pharmacy businesses are doing rather poorly in financial terms (it’s due to a combination of government rules, insurances meddling about, and power of manufacturers). And what about HR? Turns out they have a higher than average unemployment rate.Basically it boils down to this. Do the organizations or companies hiring see any skill or benefit or opportunity worth hiring? If that answer is no, you will have troubles. Or can they hire less of you? If that answer yes, you will also have troubles getting hired. The latter will be explained in further detail. Notice how the first resume of Da Vinci doesn’t mention what he did so much as what he could mean for his employer?Other labour economists have also looked at countries where people move more readily than other countries and have compared these differences. The conclusion of the research is as follows. It turns out that moving out doesn’t increase employment rate. If you were unemployed before and you moved, you’d still be just as likely without a job as before the move.Returning to the last question. If companies or organizations can afford to pay you less or hire less of you, then they will. Corporate franchises, armies, hospitals, schools, large factories, particularly if these are the only employer in the area and they often are, then they are the sole ones with hiring power. They can set wages and they determine how many get hired. J.V. Robinson has done research into monopsonist power (sole buyer) since the 1930’s. It is the substitution effect in labour and wages that explains unemployment. The things that work counter to monopsony are: labour unions, collective labour agreements, and minimum wage. Contrary to what many people think, introduction of minimum wage can actually lower unemployment. For some I’m sure the latter baffles the mind.Think about these counter means for a second. It’s all organized and collective means. Meaning the folks who use them are part of some community, i.e. they’re co-workers, or went to the same school, or they’ve at least been in the same army together. Other then friends and family, it’s also workplaces that can get you referrals! Particularly co-workers get you referrals. This is why long term unemployed (those more than 3 years without a job) have a less than 1% chance to get employed, it’s because they tend to not have anyone who can give them referrals. This is why when a large manufacturer declares bankruptcy really is a death sentence to a lot of peoples career if they previously worked there. Not only is your job gone, so too is your network.If you look at the way many resumes are written in many Asian countries, that often have a relatively young population, many of whom don’t have the work experience for a resume, you will notice that often times it isn’t a formal resume, but contains a lot of life experiences, opinions, values, virtues, or beliefs and a good one will talk about what they want to do in the future. You see a referral can also be about the act of referring to further action.As for my personal opinion and the way I look at it from personal experiences. The jobs I had as a teen or a student, that I got via employment agencies, where I am sure they didn’t even take a look for one second at a resume. There the referral was to ask what kind of work do you wanted to do. As for other more recent jobs. All of these were gained either via clients or via friends. The penultimate job, I received, because I connected to a lawyer that a client and I met to talk about a trademark and the current I got through a friend who already worked there at another department. Neither of the latter two employers ever took so much as a second to look at the resume.I don’t know anyone who ever got hired because of their resume, not a single person. Either they got the job because they knew someone, or the one hiring them mistook them for someone they thought they knew relatives of (still technically a referral).So there you have it. Resume pretty darn useless, whereas referrals are the future.","224,565 followers",Gayle Laakmann McDowell,8.5K,1.2K,49.8M,2020,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
14,"Define ""Hadoop"". Core Hadoop means HDFS, YARN, MapReduce. MR is already legacy, but HDFS will be around in some form for decades. YARN will be around a long time. They are more elemental, being the storage and scheduling on which other things are built; MR is really a framework on top that can be swapped out.The broader Hadoop ecosystem will also be around for decades, but the pieces will come and go. Any individual project may not be relevant in 5 years, but something else will be in its place.It's kind of like asking how long Linux will last. Linux in its original incarnation is already longDefine ""Hadoop"". Core Hadoop means HDFS, YARN, MapReduce. MR is already legacy, but HDFS will be around in some form for decades. YARN will be around a long time. They are more elemental, being the storage and scheduling on which other things are built; MR is really a framework on top that can be swapped out.The broader Hadoop ecosystem will also be around for decades, but the pieces will come and go. Any individual project may not be relevant in 5 years, but something else will be in its place.It's kind of like asking how long Linux will last. Linux in its original incarnation is already long gone but the much bigger ecosystem we call ""Linux"" is still alive and will be for a long time.","1,683 followers",Dominic Ligot,1.1K,611,2.7M,2016,https://www.quora.com/As-technology-progresses-will-we-move-past-programming-languages-and-if-so-what-would-replace-them
