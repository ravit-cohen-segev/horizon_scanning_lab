,Answer,followerCount,name,upvoteCount,answerCount,answerViews,year,question
0,"The 3D printed material has to improve. The material has to be able to flow easily at relatively low temperature for faster printing speed, yet set to become very hard, heat resistant, and durable.",46 followers,Ian Lang,2.4K,5.8K,64.3M,2019,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
1,"This is kind of a fascinating ponderance, thanks for the A2A.3D printing can be remarkably fast for what it is, but think through getting it faster we need to look at what’s keeping it slow. I’m going to do some BIG lumping together of types of machines since similar methods share similar problems.For fused deposition printing:This is kind of a fascinating ponderance, thanks for the A2A.3D printing can be remarkably fast for what it is, but think through getting it faster we need to look at what’s keeping it slow. I’m going to do some BIG lumping together of types of machines since similar methods share similar problems.For fused deposition printing:For curing resin or powder gluing printers","3,717 followers",Andy Duffell,5.1K,6.2K,26.2M,2019,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
2,"I once witnessed a (secret) demonstration event at NAS Cecil Field for the (then) Shah of Iran. Must have been 1976. The USAF demonstrated both the YF-16 and the YF-17. The YF-16 performed alongside an F-4 Phantom for comparison. [I was flying the USN A-7E at the time, and was pretty impressed with that aircraft.]Once you saw those two prototypes perform at their maximum, you knew all other existing fighter aircraft were obsolete. Wasn’t even close. Jaw-dropping, WTF, astonishing jump forward in fighter performance.A new chapter in fighter aircraft design had arrived.I once witnessed a (secret) demonstration event at NAS Cecil Field for the (then) Shah of Iran. Must have been 1976. The USAF demonstrated both the YF-16 and the YF-17. The YF-16 performed alongside an F-4 Phantom for comparison. [I was flying the USN A-7E at the time, and was pretty impressed with that aircraft.]Once you saw those two prototypes perform at their maximum, you knew all other existing fighter aircraft were obsolete. Wasn’t even close. Jaw-dropping, WTF, astonishing jump forward in fighter performance.A new chapter in fighter aircraft design had arrived.","6,092 followers",David Tussey,3.1K,1.8K,37.5M,2022,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
3,"All we can see is a huge airliner with huge engines and hundreds of passengers flies effortlessly in the sky like a bird. But only aerospace engineers know there is something called ""A boundary layer is a thin layer of air close to the surface of the wing in contaAll we can see is a huge airliner with huge engines and hundreds of passengers flies effortlessly in the sky like a bird. But only aerospace engineers know there is something called ""A boundary layer is a thin layer of air close to the surface of the wing in contact with the airflow in which (within its thickness) the flow velocity varies from zero at the surface (where the flow “sticks” to the wall because of its viscosity) up to 99% of the free stream velocity.As long as flow of boundary layer is laminar, is helps generating lift, but once it becomes turbulent, it not only reduces lift but also increases drag. Here we can see how it is maintained laminar and flow separation is delayed by using vortex generators.Now we all know itT",1 follower,Devil Yash,611,0,0,2016,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
4,"You’re mistaken. Technology is advancing very rapidly.My grandfather would have grown up in a world very similar to that of his grandfather, but in just my lifetime, there has been enormous change. When I was a student in the 1970’s, I lived in a house with no central heating, one telephone wired into the wall, and a black and white television with two channels. My Dad had a car, but it was technically not much different to the car he would have had twenty years earlier. My first flight was in an airliner with propellers.Had I been born in 1930, apart from the TV, my world would have been veryYou’re mistaken. Technology is advancing very rapidly.My grandfather would have grown up in a world very similar to that of his grandfather, but in just my lifetime, there has been enormous change. When I was a student in the 1970’s, I lived in a house with no central heating, one telephone wired into the wall, and a black and white television with two channels. My Dad had a car, but it was technically not much different to the car he would have had twenty years earlier. My first flight was in an airliner with propellers.Had I been born in 1930, apart from the TV, my world would have been very recognisable. Even around the year 2000, computers were only starting to make an impact on my industry at the time, advertising. I had one, but just for playing games on.The world has changed utterly. We are now seriously discussing AI and driverless cars. We can transplant","358,987 followers",Sean Kernan,5.9K,5.6K,727.1M,2018,https://www.quora.com/How-has-the-technology-used-by-aerospace-engineers-evolved-since-the-beginning-of-manned-flight
5,"Well…. it has been like that from the beginning. The observer, the scientist, is always part of the process of doing a theory, creating a set in laboratory and all. The objectivity of the experiment as meaning “the observer does not influence” is a myth.In quantum mechanics, as far as wave-particle duality is concerned, this fact has become very evident: the light exhibits a behavior according to the behavior expected by the experiment that was set up by the scientist. The set carries something of the experimenter and from that I say “the observer is part of the experiment”.Glad you ask",0 followers,Jim Hogarth,10.5K,94,5.5M,2002,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
6,"Yes, the end of Java is near. The end of Java has been near since it was introduced, and I'm pretty sure that the end of Java will remain near for the next couple of decades at least.","63,772 followers",Joshua Engel,3.8K,15.1K,76.7M,2012,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
7,"Neither of them. These are not languages of the future, they are survivors from the past. Past performance is no indication of future performance. Look at C, despite the incredible amount of nonsensical negativity against it by woolly minded OOP sycophants, it has been used in production since 1972 ( that’s 46 years). Python is actually implemented in C, and the reason people adopt Python is not because Python is so good, but because the C/C++ libraries that Python is connected to are so good (thanks to the Boost team’s work).Most of the JVMs are written in C (or sometimes C++, but I’d bet strNeither of them. These are not languages of the future, they are survivors from the past. Past performance is no indication of future performance. Look at C, despite the incredible amount of nonsensical negativity against it by woolly minded OOP sycophants, it has been used in production since 1972 ( that’s 46 years). Python is actually implemented in C, and the reason people adopt Python is not because Python is so good, but because the C/C++ libraries that Python is connected to are so good (thanks to the Boost team’s work).Most of the JVMs are written in C (or sometimes C++, but I’d bet stripped down), not Java. Your question is like asking which angel is going to rule heaven - the answer is none.Language adoption is a precarious balance between developer gullibility, corporate gullibility, and the basic human tendency to underestimate the degree to which ennui and incompetence compel their never ending search for something sufficiently magical to conceal their own crippling lack of talent and ability.One thing is certain: languages come and go, but C reigns supreme. And when the inevitable heat death of the universe occurs, most likely brought about by excessive use of generic programming patterns and a critical mass of Singleton Factory Observer Listener Unit Decorators, we’ll rebuild it all: and write in C.",81 followers,Jason Martin,1.2K,306,1.5M,2018,https://www.quora.com/What-technology-needs-to-evolve-for-3D-printing-to-get-much-faster
8,"Java will almost certainly still be around. Languages don’t die. Some decline in popularity a little, some decline in popularity a lot, and a few stayC, for example, is currently the most popular programming language (per the TIOBE IndexC has been around since the early 1970’s. Will Java last as long and be as popular?There’s a good chance it will.But a framework like Spring, probably not. Frameworks aJava will almost certainly still be around. Languages don’t die. Some decline in popularity a little, some decline in popularity a lot, and a few stayC, for example, is currently the most popular programming language (per the TIOBE IndexC has been around since the early 1970’s. Will Java last as long and be as popular?There’s a good chance it will.But a framework like Spring, probably not. Frameworks are ephemeral and constantly changing. Likely as not,Instead, everyone will want to use the cool new hotness, whatever it is.But that doesn’t matter. In a long career, you’ll change frameworks and platforms and tools and languages many, many times. It’s how the industry works, and everyone gets used to it.By the way, GPT-3 is a text-generation toy. It has nothing to do with computer languages, other than being written using one, and being able to create useless code-like pseudo-programs. It certainly won’t replace them.","8,707 followers",Mario Galindo Queralt,1.4K,637,8.8M,2020,https://www.quora.com/How-has-the-technology-used-by-aerospace-engineers-evolved-since-the-beginning-of-manned-flight
9,"It turns a huge amount of commonly used code into a library of small reusable components.Every application has code. That code has two broad parts: mechanism and domain.A web server is a mechanism. It is general purpose. You tell it what pages to serve and it serves them.The pages are domain. They are completely unique to your problem.All code is like this. A database is a mechanism. An API controller is a mechanism.What Spring does is provide mechanisms for hundreds of common tasks: web frameworks, data access, security, logins, transaction management, messaging, REST server and client.This lIt turns a huge amount of commonly used code into a library of small reusable components.Every application has code. That code has two broad parts: mechanism and domain.A web server is a mechanism. It is general purpose. You tell it what pages to serve and it serves them.The pages are domain. They are completely unique to your problem.All code is like this. A database is a mechanism. An API controller is a mechanism.What Spring does is provide mechanisms for hundreds of common tasks: web frameworks, data access, security, logins, transaction management, messaging, REST server and client.This leaves you to concentrate on your domain - the bits unique to your problem.Spring does this in a very unobtrusive way. Spring classes stand alone and you pull them in as and when needed. There is not one ‘big container’ like in J2EE of old.Spring enables unit testing of your whole app because of this.It is the breadth of Spring combined with its structural properties that have caused it to endure.It is a very well made piece of code.",21 followers,Jeff Nelson,1.9K,1.6K,23M,2019,https://www.quora.com/How-has-the-technology-used-by-aerospace-engineers-evolved-since-the-beginning-of-manned-flight
10,"Spring is just one of many tools available with its own purpose. You don’t use Java for Spring any more than you use Java for Hibernate. On the other hand, you do use Spring for dependency injection, easy MVC, web security, etc., and you do use Hibernate for interfacing with DB, and so on.You might think that I am just arguing semantics pointlessly here, but it is important to understand that Spring is not someSpring is just one of many tools available with its own purpose. You don’t use Java for Spring any more than you use Java for Hibernate. On the other hand, you do use Spring for dependency injection, easy MVC, web security, etc., and you do use Hibernate for interfacing with DB, and so on.You might think that I am just arguing semantics pointlessly here, but it is important to understand that Spring is not someTLDR: Web development is not the only kind of software development in existence.",548 followers,Sanidhya Gupta,604,135,660.8K,2021,https://www.quora.com/How-has-the-technology-used-by-aerospace-engineers-evolved-since-the-beginning-of-manned-flight
