,Answer,followerCount,name,upvoteCount,answerCount,answerViews,question
0,"To set the context of the answer - the question is asking ""what platform"" will ""IoT Software"" built on - before answering it is important to keep in mind that IoT Software may or may not be present at the different places in the network topology:The End Device or the Thing or the MachineThe use case would really define if all three elements are present or not. Now to answer the question, IoT SW will be built on different technologies based on where it is present.End Devices are going to be skewed towards C/C++ and may beTo set the context of the answer - the question is asking ""what platform"" will ""IoT Software"" built on - before answering it is important to keep in mind that IoT Software may or may not be present at the different places in the network topology:The End Device or the Thing or the MachineThe use case would really define if all three elements are present or not. Now to answer the question, IoT SW will be built on different technologies based on where it is present.End Devices are going to be skewed towards C/C++ and may be in some case Java implementations. Java implementations may use OSGi as their platform or framework. Certain end devices such as stand alone sensors may have a very constrained set of CPU and Memory resourcesGateway or Bridges: would be similar to End Devices except that they are going to less constrained in terms of the resources available to them compared to some end devices.Cloud - here is where you would have more choices on the platforms available. Many Platform As A Service providers such as AWS or Google App Engine can qualify to be the platform. Certain specific IoT Platforms that are being created also would fit this category such as from Ayla Networks.","76,040 followers",Adrián Lamo,2.5K,488,33.5M,https://www.quora.com/What-platform-will-Internet-of-Things-software-be-built-on
1,"There is no right answer to the question which one you should learn first.Internet of Things (IoT)There is no right answer to the question which one you should learn first.Internet of Things (IoT)Under IoT solution I am not talking just about a hardware, or a Wi-Fi/LoRa/ZigBee connection, or just an IoT platform, where data is stored and managed, and not even about end-user applications. It all has to seamlessly work together as a complete entity, and it has to be configurable to suit the needs of any particular business.On the other hand, industrial companies produce a massive amount of data on a daily basis. However, by and large, companies fail to systematically collect, store, analyze and use such data to improve process efficiency or meet other goals. Here comesThe philosophy behind machine learning is to automate the creation of analytical models in order to enable algorithms to learn continuously with the help of available data. In other words, the goal is to devise learning algorithms that do the learningMachine learning can be used to achieve even higher levels of efficiency than IIoT alone. With the right algorithms, the system can be gradually taught to recognize any internal and external production-related factors, optimize the use of consumables, and improve the efficiency of the entire production process.",16 followers,Daniel Bourke,6.9K,178,7.6M,https://www.quora.com/What-platform-will-Internet-of-Things-software-be-built-on
2,"Machine learning is when you train your program over datasets so that it learns a behavior. Like you make your computer learn how to play pong without letting the ball drop. IoT is basically a network of devices that you can use for a variety of tasks. For example: make your fridge order more beer when you're running short automatically or having a watering system that connects to the internet to see if it has rained or not to figure out if it should water your garden, or one of those smart bulbs that you can control with your phone, etc.","10,686 followers",Daniel Tunkelang,819,685,4.9M,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
3,"You’re asking the exact same question I was asking myself about a year ago. I was working at the Apple Store and I wanted a change. I wanted to start building the tech I was servicing.I started looking into Machine Learning (ML) and Artificial Intelligence (AI).There’s so much going on in the field.Every week it seems like Google or Facebook are releasing a new kind of AI to make things faster or improve our experience.Don’t get me started on the number of self-driving car companies. This is a good thing though. I’m not a fan of driving and roads are dangerous.Even with all this happening, theYou’re asking the exact same question I was asking myself about a year ago. I was working at the Apple Store and I wanted a change. I wanted to start building the tech I was servicing.I started looking into Machine Learning (ML) and Artificial Intelligence (AI).There’s so much going on in the field.Every week it seems like Google or Facebook are releasing a new kind of AI to make things faster or improve our experience.Don’t get me started on the number of self-driving car companies. This is a good thing though. I’m not a fan of driving and roads are dangerous.Even with all this happening, there’s still yet to be an agreed definition of what exactly artificial intelligence is.Some argue deep learning can be considered AI, others will say it’s not AI unless it passes the Turing Test.This lack of definition really stunted my progress in the beginning. It was hard to learn something which had so many different definitions.Enough with the definitions.How did I get started?My friends and I were building a web startup. It failed. We gave up due to a lack of meaning. But along the way, I was starting to hearing more and more about ML and AI.“The computer learns the things for you?” I couldn’t believe it.I stumbled across Udacity’s Deep Learning Nanodegree. A fun character called Siraj Raval was in one of the promo videos. His energy was contagious. Despite not meeting the basic requirements (I had never written a line of Python before), I signed up.Three weeks before the course start date I emailed Udacity support asking what the refund policy was. I was scared I wouldn’t be able to complete the course.I didn’t get a refund. I completed the course within the designated timeline. It was hard. Really hard at times. My first two projects were handed in four days late. But the excitement of being involved in one of the most important technologies in the world drove me forward.Finishing the Deep Learning Nanodegree, I had guaranteed acceptance into either Udacity’s AI Nanodegree, Self-Driving Car Nanodegree or Robotics Nanodegree. All great options. I was a little lost. “Where do I go next?”I needed a curriculum. I’d built a little foundation with the Deep Learning Nanodegree, now it was time to figure out where I’d head next.My Self-Created AI Masters DegreeI didn’t plan on going back to university anytime soon. I didn’t have $100,000 for a proper Masters Degree anyway.So I did what I did in the beginning. Asked my mentor, Google, for help.I’d jumped into deep learning without any prior knowledge of the field. Instead of climbing to the tip of the AI iceberg, a helicopter had dropped me off on the top.After researching a bunch of courses, I put a list of which ones interested me the most in Trello.Trello is my personal assistant/course coordinator.I knew online courses had a high drop out rate. I wasn’t going to let myself be a part of this number. I had a mission.To make myself accountable, I started sharing my learning journey online. I figured I could practice communicating what I learned plus find other people who were interested in the same things I was. My friends still think I’m an alien when I go on one of my AI escapades.I made the Trello board publicThe curriculum has changed slightly since I first wrote it but it’s still relevant and I visit the Trello board multiple times per week to track my progress.Getting a jobI bought a plane ticket to the US with no return flight. I’d been studying for a year and I figured it was about time I started putting my skills into practice.My plan was to rock up to the US and get hired.Then Ashlee messaged me on LinkedIn, “Hey I’ve seen your posts and they’re really cool, I think you should meet Mike.”I met Mike.I told him my story of learning online, how I loved healthtech and my plans to go to the US.“You may be better off staying here a year or so and seeing what you can find, I’ think you’d love to meet Cameron.”I met Cameron.We had a similar chat what Mike and I talked about. Health, tech, online learning, US.“We’re working on some health problems, why don’t you come in on Thursday?”Thursday came. I was nervous. But someone once told me being nervous is the same as being excited. I flipped to being excited.I spent the day meeting the Max Kelsen team and the problems they were working on.Two Thursday’s later, Nick, the CEO, Athon, lead machine learning engineer, and I went for coffee.“How would you like to join the team?” Asked Nick.“Sure.” I said.My US flight got pushed back a couple months, I’ve also got a return ticket.Sharing your workLearning online, I knew it was unconventional. All the roles I’d gone to apply for had Masters Degree requirements or at least some kind of technical degree.I didn’t have either of these. But I did have the skills I’d gathered from a plethora of online courses.Along the way, I was sharing my work online. My GitHub contained all the projects I’d done, my LinkedIn was stacked out and I’d practiced communicating what I learned through YouTube and articles on Medium.I never handed in a resume for Max Kelsen. “We checked you out on LinkedIn and we were impressed.” My body of work was my resume.Regardless if you’re learning online or through a Masters Degree, having a portfolio of what you’ve worked on is a great way to build skin in the game.ML and AI skills are in demand but that doesn’t mean you don’t have to showcase them. Even the best product won’t sell without any shelf space.Whether it be GitHub, Kaggle, LinkedIn or a blog, have somewhere where people can find you. Plus, having your own corner of the internet is great fun.How do you start?Where do you go to learn these skills? What courses are the best?There’s no best answer. Everyone’s path will be different. Some people learn better with books, others learn better through videos.What’s more important than how you start is why you start.Start with why.Again, no right reason. All are valid in their own way.Start with why because having a why is more important than how. Having a why means when it gets hard and itGot a why? Good. Time for some hard skills.I can only recommend what I’ve tried.I’ve completed courses from (in order):They’re all world class. I’m a visual learner. I learn better seeing things being done/explained to me on. So all of these courses reflect that.If you’re an absolute beginner, start with some introductory Python courses and when you’re a bit more confident, move into data science, machine learning and AI.How much math?The highest level of math education I’ve had was in high school. The rest I’ve learned through Khan Academy as I’ve needed it.There are many different opinions on how much math you need to know to get into machine learning and AI. I’ll share mine.If you want to apply machine learning and AI techniques to a problem, you don’t necessarily need an in-depth understanding of the math to get a good result. Libraries such as TensorFlow and PyTorch allow someone with a bit of Python experience to build state of the art models whilst the math is taken care of behind the scenes.If you’re looking to get deep into machine learning and AI research, through means of a PhD program or something similar, having an in-depth knowledge of the math is paramount.In my case, I’m not looking to dive deep into the math and improve an algorithm’s performance by 10%. I’ll leave that to people smarter than me. Instead, I’m more than happy to use the libraries available to me and manipulate them to help solve problems as I see fit.What does a machine learning engineer actually do?What a machine engineer does in practice might not be what you think.Despite the cover photos of many online articles, it doesn’t always involve working with robots that have red eyes.Here are a few questions an ML engineer has to ask themselves daily.I borrowed these from a great article by Rachel Thomas, one of the co-founders ofFor more, I made a video of what we usually get up to on Monday’s at Max KelsenNo set pathThere’s no right or wrong way to get into ML or AI.The beautiful thing about this field is we have access to some of the best technologies in the world, all we’ve got to do is learn how to use them.You could begin by learning Python code.You could begin by studying calculus and statistics.You could begin by learning about the philosophy of decision making.Machine learning and AI fascinates me because of this intersection of fields.The more I learn about it, the more I realise there’s plenty more to learn. And this hypes me up.Sometimes I get frustrated when my code doesn’t run. Or I don’t understand a concept. So I give up temporarily. I give up by letting myself walk away from the problem and take a nap. Or go for a walk. When I come back it feels like I’m looking at it with different eyes. The excitement comes back. I keep learning.There’s so much happening in the field it can be daunting to get started. Too many options lead to no options. Ignore this.Start wherever interests you most and follow it. If it leads to a dead end, great, you’ve figured out what you’re not interested in. Retrace your steps and take the other fork in the road instead.Computers are smart but they still can’t learn on their own. They need your help.","26,866 followers",Rohit Malshe,1.3K,327,11.4M,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
4,"As someone who often finds himself explaining machine learning to non-experts, I offer the following list as a public service announcement.As someone who often finds himself explaining machine learning to non-experts, I offer the following list as a public service announcement.There’s far more to machine learning than I can explain in a top-10 list. But hopefully this serves as a useful introduction for non-experts.",3 followers,Sridhar Mahadevan,1.1K,177,6.2M,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
5,"both are different fields you already know. but to hack your question, i’ll say learn ML first. learning means learn the fundamentals first, without long practical experience you’ll never be an expert.anyway, explanation is, ML was born long before and is upgrading since last decade with a high speed. on the other hand, what we mean by modern IOT started to become popular since 2013. so, IOT has technological dependency on ML. also, you will have to work on many intelligence issues while working with IOT.actually, ML can be applied on any field. on the other hand, IOT is another domain of techboth are different fields you already know. but to hack your question, i’ll say learn ML first. learning means learn the fundamentals first, without long practical experience you’ll never be an expert.anyway, explanation is, ML was born long before and is upgrading since last decade with a high speed. on the other hand, what we mean by modern IOT started to become popular since 2013. so, IOT has technological dependency on ML. also, you will have to work on many intelligence issues while working with IOT.actually, ML can be applied on any field. on the other hand, IOT is another domain of technology. :)NB: the answer may also vary according to your situation.",3 followers,Sridhar Mahadevan,1.2K,177,6.2M,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
6,"I had been wanting to take a stab at this one since a few days, but it always looked like an enormous task, because this question has used too many words. In addition, this is a question on which a lot of people have their eyes, and a lot of others have already written elaborate answers.Let me first re-order all the important words:Imagine that you want to become a data scientist, and work in a big organization like Amazon, Intel, Google, FB, Apple and so on.How would that look like?I had been wanting to take a stab at this one since a few days, but it always looked like an enormous task, because this question has used too many words. In addition, this is a question on which a lot of people have their eyes, and a lot of others have already written elaborate answers.Let me first re-order all the important words:Imagine that you want to become a data scientist, and work in a big organization like Amazon, Intel, Google, FB, Apple and so on.How would that look like?In all the seriousness, if you want a elaborate documentation on all this, I would suggest, go ahead and read this McKinsey report to get a full understanding. I only extracted a few sections out of it conveniently because I only wanted to add on the top of someone else’s knowledge, and put together these concepts like a story so as to inspire the people to think about this subject and begin their own journeys.Big data: The next frontier for innovation, competition, and productivityI will answer a few questions step by step, and wherever possible, I will give a few pictures, or plots to show you how things look like.McKinsey consultants! You are amazing, so if you read things written in this answer that were typed by you at some point in time, I give full credit to you.Let us now talk about analysis: This is big part of being a data scientist.Hope this somewhat elaborate write up gives you some inspiration to hold on to.",16 followers,Cory Hicks,572,0,0,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
7,"Great question! How indeed does one prepare oneself for a (research or otherwise) career in machine learning, in particular in terms of familiarizing oneself with the underlying mathematics? I’m going to resist the temptation of trotting out some standard books, and instead, focus on giving broad advice.There’s some bad news on this front, and it’s best to get this out of the way as quickly as possible. Having spent 35+ years studying machine learning, let me put this in the most direct way possible: no matter how much time and effort you devote to it, you can never know enough math to read thGreat question! How indeed does one prepare oneself for a (research or otherwise) career in machine learning, in particular in terms of familiarizing oneself with the underlying mathematics? I’m going to resist the temptation of trotting out some standard books, and instead, focus on giving broad advice.There’s some bad news on this front, and it’s best to get this out of the way as quickly as possible. Having spent 35+ years studying machine learning, let me put this in the most direct way possible: no matter how much time and effort you devote to it, you can never know enough math to read through all the ML literature. Different parts of ML use a variety of esoteric math. There’s just no way one person can know all of this math, so it’s good to be forewarned.OK, with that out of the way, how does one prepare oneself? Think of the process analogous to conditioning your mind and body to run a marathon. It’s a gradual process, of improving your fitness, your ability to run for longer and longer distances, your breathing technique, your mental focus, and dozens of other dimensions. Working in ML is not like running a 100 meter sprint, where the race is pretty much over in a single breath. It’s much more of an endurance sport, where you have to constantly work at it to remain in shape, and there’s no point at which you can relax and say: OK, I know it all! Because no one does!An example from my recent work will clarify the issues involved. One of the major challenges in machine learning is that there’s never enough training data to tackle every ML problem that presents itself. Humans are especially adept in solving this challenge. I can get on a flight from San Francisco and within a few short hours find myself in a dizzying diversity of new environments, from the glitzy subways of Tokyo and the bleak winter in Scandinavia to an arid savannah in Africa, or a swampy rainforest in Brazil. There’s no way I can ever hope to collect training samples from every possible environment that I can encounter in life. So, what do we do? We transfer our learned knowledge from places we’ve been — so, having taken the BART subway in San Francisco, and subways in New York and London, I can try to handle the complexity of the subway in Tokyo by drawing upon my previous experience. Of course, it doesn’t quite match — the language is completely different, the tone and texture of the visual experience is completely different (attendants in gloved hands show you the way in Tokyo — no such luxury is available in the US!). Yet, we somehow manage, and plod our way through new experiences. We even cherish the prospect of finding ourselves in some alien new culture, where we don’t speak the language and can’t ask for directions. It opens up our mind to new horizons, all part of the charm of travel.So, what’s the mathematics involved in implementing a transfer learning algorithm? It varies a lot depending on what type of approach you investigate. Let’s review some approaches from computer vision over the past few years. One class of approaches are so-called subspace methods, where the training data from a collection of images in the “source” domain (which conveniently has labels given to us) is to be compared with a collection of unlabeled images from a “target” domain (e.g., “source” → NY subway, “target” → Tokyo subway).One can take a collection of images of size NxN and using a variety of different methods find the smallest subspace that the source images lie in (treating each image as a vector in N^2 dimensions). Now, to understand this body of work, you obviously need to know some linear algebra. So, if you don’t understand linear algebra, or you took a class way back when and forgot it all, it’s time to refresh your memory or learn anew. Fortunately, there are excellent textbooks (Strang is usually a good place to start) and also something like MATLAB will let you explore linear algebraic ML methods without having to implement things like eigenvalue or singular value decomposition. As I usually told my students, keep the motto “eigen do it if I try” in mind. Persevere, and keep the focus on why you are learning this math. Because it is important and essential to understand much of modern ML.OK, great, you’ve managed to learn some linear algebra. Are you done? Ummm, not quite. So, back to our transfer learning example. You construct a source subspace from the source images, and a target subspace from the target images. Umm, how does one do that. OK, you can use a garden variety dimensionality reduction method like principal components analysis (PCA), which just computes the dominant eigenvectors of the covariance matrices of the source and target images. This is one subroutine call in MATLAB. But, PCA is 100 years old. How about something new and cool, like a ooh la la subspace tracking method like GOUDA, which uses the fancier math of Lie groups. Oops, now you need to learn some group theory, the mathematics of symmetry. As it turns out, matrices of certain types, like all invertible matrices, or all positive definite matrices, are not just linear algebraic objects, they are also of interest in group theory, a particularly important subfield of which is Lie groups (Lie → “Lee”).OK, great, you have a smattering of knowledge of group theory and Lie groups. Are you done? Hmmm…actually not, because it turns out Lie groups are not just groups, but they are also continuous manifolds. What in the blazes is a “manifold”? If you google this, you are likely to encounter web pages describing engine parts! No, a manifold is something entirely different in machine learning, where it means a non-Euclidean space that has curvature. It turns out the set of all probability distributions (e.g., 1 dimensional Gaussians with a scalar variance dimension and a scalar mean dimension) are not Euclidean, but rather, describe a curved space. So, the set of all positive definite matrices form a Lie group, with a certain curvature. What this implies is that obvious operations like taking the average have to done with considerable care. So, off you go, learning all there is to know about manifolds, Riemannian manifolds, tangent spaces, covariant derivatives, exp and log mappings, etc. Oh, what fun!Getting back to our transfer learning method, if you compute the source covariance matrix C_s and the target covariance matrix C_t, then there is a simple method called CORAL (for correlational alignment) that figures out how to transform C_s into C_t using some invertible mapping A. CORAL is popular as a transfer learning method in computer vision. But, CORAL does not actually use the knowledge that the space of positive definite matrices (or covariance matrices) forms a manifold. In fact, it forms something called a cone in convex analysis. If you subtract one covariance matrix from another, the result is not a covariance matrix. So, they do not form a vector space, but rather something else entirely. Oops, it turns out the study of cones is important in convex analysis, so there you go again, you need to learn about convex sets and functions, projections onto convex sets, etc. The dividing line between tractable and intractable optimization is not linear vs. nonlinear, but rather, convex vs. non-convex.I hope the pattern is becoming clear. Like one of those legendary Russian dolls, where each time you open one, you find it is not the end, but there’s another one inside it, so it is with learning math in machine learning. Each time you learn a bit of math, you find it opens the door to an entirely new field of math, which you need to know something about as well. For my most recent paper, I had to digest a whole book devoted entirely to the topic of positive definite matrices (it’s like the old joke, where the deeper you go, the more you know about a specialized topic, until you know everything about —- nothing!).Any given problem in machine learning, like transfer learning, can be formulated as a convex optimization problem, as a manifold learning problem, as a multivariate statistical estimation problem, as a nonlinear gradient based deep learning problem, etc. etc. Each of these requires learning a bit about the underlying math involved.If you feel discouraged, and feel like tearing your hair out at this point, I sympathize with you. But, on the other hand, you can look on the positive side, and realize that in terms of our analogy of running a marathon, you are steadily becoming better at running the long race, building your mathematical muscle as you go along, and gradually things start falling into place. Things start to make sense, and different subfields start connecting with each other. Something strange happens. You start liking it! Of course, there’s a drawback. Someone who doesn't understand any of the math you get good at using asks you to explain your work, and you realize that it’s impossible to do that without writing equations.Most researchers find their comfort zone and try to stay within it, since otherwise, it takes a great deal of time and effort to master the dozens of mathematical subfields that modern ML uses. But, this strategy eventually fails, and one is always forced to get outside one’s comfort zone and learn some new math, since otherwise, a whole area of the field becomes alien to you.Fortunately, the human brain is an amazing instrument, and provides decades and decades of trouble-free operation, allowing us to continually learn over 40,50, 60, years or more. How precisely it does that without zeroing out all prior learning is one of the greatest unsolved mysteries in science!","1,245 followers",Aleks Jakulin,869,0,0,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
8,"Great question! I always begin my first lecture of my graduate ML course with this question. I like analogies, so the best way to explain the answer is through an analogy.ML is to statistics as engineering is to physics.How does civil or electrical or mechanical engineering differ from physics? The latter is the study of fundamental laws of the universe, of matter, of conservation of energy and symmetry etc. The former engineering fields are attempts to build structures, gadgets, machines that build on the deep knowledge of the universe that physics gives us. It is laughable to think that we cGreat question! I always begin my first lecture of my graduate ML course with this question. I like analogies, so the best way to explain the answer is through an analogy.ML is to statistics as engineering is to physics.How does civil or electrical or mechanical engineering differ from physics? The latter is the study of fundamental laws of the universe, of matter, of conservation of energy and symmetry etc. The former engineering fields are attempts to build structures, gadgets, machines that build on the deep knowledge of the universe that physics gives us. It is laughable to think that we could have computers without the deep knowledge of material science that came from physics, particularly quantum mechanics. It was quantum theory that was used by the pioneering Bell Lab scientists in their first development of the transistor, a solid state switching device that was far superior to the older vacuum tube device. Without quantum mechanics, transistors could never have been developed. The N-P-N junction can only be explained by quantum effects, since it requires understanding how “holes” (gaps where electrons resided) could move across junctions.Similarly, statistics is the science that underlies the modern effort to build “learning machines”, or machine learning. Statistics is the original data science, and it is somewhat ironic that ML researchers have wrapped themselves in this cloak of “data science”. Statisticians, for over a hundred years, have labored mightily to build the principles of data science. The deepest and most beautiful theorems in data science come not from machine learning, but from statistics.Take the beautiful concept of “sufficient statistics”. What can you abstract from raw data so that you retain all the knowledge necessary about the generative model that can “explain” the data. The famous Rao-Blackwell theorem is an example of such a deep theorem, which can guide the design of powerful machine learning systems (and has done so, for decades).Trying to do ML without knowing statistics is like to trying to build engineering structures without physics. You can certainly succeed in some ways — after all, the Egyptians built the pyramids — but it will be a risky trial and error exercise, possibly costing thousands of lives in costly mistakes. Science allows the engineer to construct safe designs, solutions that can be tested in simulation, and built reliably (such as the latest skyscraper in San Francisco, the new SalesForce building that has been extensively tested to withstand the next earthquake, whenever that happens).","3,905 followers",Monica Anderson,806,148,1M,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
9,"Due to our innate fascination with novelty, people are always talking about ""the next big thing."" While this kind of talk is prevalent in all industries and niches, it's most common in the technology industry because technology changes and advances every day. While your industry may not be as volatile or prone to change as the tech industry, technology driven change is coming to your industry via new products and services enabled by theRecently, in the world of technology, there has been a substantial buzz about the Internet of Things and you should pay attention too.Due to our innate fascination with novelty, people are always talking about ""the next big thing."" While this kind of talk is prevalent in all industries and niches, it's most common in the technology industry because technology changes and advances every day. While your industry may not be as volatile or prone to change as the tech industry, technology driven change is coming to your industry via new products and services enabled by theRecently, in the world of technology, there has been a substantial buzz about the Internet of Things and you should pay attention too. Experts and researchers agree the Internet of Things will bring significant change to both your personal and professional lives in the years to come. The tech stack that powers the internet of things — or Thing Stack as we like to call it — enables your company to create new products and services, which help you differentiate your offerings from competitors.What is the Internet of Things?The Internet of Things refers to a network of internet-connected objects like vehicles, devices and buildings. Objects are embedded with sensors and electronics to allow them to both collect and transfer information to your cloud database. The Internet of Things allows objects produced by your company to be detected and controlled remotely via existing network infrastructure. This in turn creates the opportunity for a direct integration between your physical and digital worlds. Automated IoT systems gather, report and crunch your data faster and more accurately than humans who manually gather and enter information into your database. The end result is a system that provides value to your company in new and exciting ways.IoTWhat is a technology stack?Traditionally, the adoption of innovative technologies accelerates after frameworks, languages, protocols and standards are defined. Each layer in a technology stack needs to integrate and communicate with the other layers of the stack. As a tech stack matures, it becomes easier and less expensive for your developers — if you have them — to create new products and services.The IoT stack is rapidly developing and maturing into the Thing Stack. This Thing Stack consists of three technology layers: sensors, microcontrollers and internet connectivity, and service platforms.New solutions, choices, and technologies are developing and emerging rapidly in each of the three layers because use cases differ based on industry, price point, object size, processor speed, power requirements and networking constraints. For example, a utility application intended to monitor a smart meter doesn't have the same connectivity requirements as a healthcare application designed to monitor a patient's heart rate.Your enterprise IoT application designer reviews your use cases, device requirements and existing data to better understand how to create value. By better understanding each layer of the Thinks Stack, you make better decisions about the technologies you should use for your IoT product.Layer 1: SensorsSensors have been used for years in a number of different industry contexts like healthcare, aviation, manufacturing and automotive. Now, sensors are so tiny and inexpensive they can be embedded in all the devices you use personally and professionally. The sensor layer of the IoT tech stack continues to expand as internet connected sensors are added to new products and services.Besides incorporating sensors into your smartphones and tablets, your innovative competitors are introducing new devices that contain numerous sensors. These sensors don't need to be connected directly to the internet and they sync with your smartphone via Bluetooth LE to send captured data to the cloud. For example, Sensordrone is a Kickstarter project that embeds many environmental sensors into a small dongle. Some of the environmental sensors include color intensity, humidity, gas, and pressure sensors. The dongle collects information about your physical environment and sends this information to your smartphone or tablet via Bluetooth. This example demonstrates how value can be created by new services that use sensors to gather new types of data from your physical environment.Another category of sensors are embedded in watches, contact lenses, wristbands, and fabrics. Recently, Nokia patented a technique for magnetic tattoos that vibrate from incoming messages or calls. This is possible by spray tattooing or stamping a material onto your skin. The material is then paired with a smartphone or tablet, which lets you interact with the sensor. Microsoft and University of Washington researchers are working on another way to connect sensors to your body through the use of IoT contact lenses that provide real-time updates about the biochemical fluctuations in your body. One use case is to help diabetes patients monitor their insulin levels while using these contact lenses.Layer 2: Microcontrollers and internet connectivityThe second layer in the Internet of Things technology stack allows for local storage, data processing and internet connectivity. The Internet of Things needs internet connectivity to send collected data to your cloud database. Because some sensors generate over 10,000 data points per second, it makes sense to pre-process data locally before sending it to your cloud database. By analyzing, extracting and summarizing your collected data before you send it to your cloud database, you reduce the volume of unnecessary data you send to and store on your cloud database, saving you money on data transfer and storage costs.Your microcontroller is a small computer embedded within a chip and it helps your IoT device store and pre-process collected data before it's synced to your cloud database. Your microcontroller possesses a processor, a small amount of RAM to hold data, some kilobytes of EPROM or flash memory to hold embedded software, and solid-date memory to cache data.In some cases, your IoT device may need to use programmable microcontrollers to take action and turn something on or off. In most cases, these decisions are made via a cloud application, but it makes sense to use programmable microcontrollers when a sensor detects something that could affect the health and safety of your end customers.The main and most important capability of this layer is networking, which is either wireless or wired. If a device is stationary and can access an external power source, a wired network is sufficient, but a wired network doesn't make sense for many IoT use cases because physical cables are needed to connect to the network. WiFi, wireless modems, and wireless mesh networks are the most common ways IoT devices are connected to the internet.If you plan to manufacture an IoT device you must keep in mind dependencies for your use cases. Is your device mobile or fixed? Does your device need a battery or is it connected to a fixed power supply? How much data do you need to transfer to your cloud database per hour? Should your device's connectivity be episodic or continuous?Devices you use to track your health and fitness while bicycling, running, and exercising store data while you're active, and these devices use episodic connectivity. Your device then syncs with the cloud when it's close to your smartphone or tablet. Compare this to the continuous connectivity needed by Amazon Echo's voice based digital assistant who is always listening for your commands, fetching answers from the internet the instant you ask a question. Depending on your IoT product's use cases, you may need continuous connectivity.When you research Think Stack vendors, you'll notice a wide range of different networking protocols, hardware, software, and architectures are used to build IoT products. Due to the variation in use cases and environments, you have many choices when it comes to adding networking and computing capabilities your IoT device. While some vendors focus more on hardware components, other vendors provide a system of integrated software and hardware. Sometimes, IoT software solutions spill into the third layer of the Thing Stack, which is referred to as the service platform.Layer 3: Service platformsThe first two layers for the Thing Stack embed sensor and microcomputers in your IoT device, but your IoT product profits from the service platform layer. This layer delivers value to your customers by automating processes and delivering rich data analytics. Your cloud application combines data collected from numerous IoT sensors with your (or your customers) other business data to produce insights that generate business value.It's important for your service platform to create a feedback loop between your IoT devices and you device management software, so you and your customers can upgrade, monitor, and maintain the firmware on each the device. In most cases, service platforms operate on cloud infrastructure and utilize a multi-tenant software architecture to deliver a seamless software-as-a-service (SaaS) experience.The convergence between our digital and physical worlds stresses your IT operations by increasing demand for data management, storage, tagging and analysis. It's in your company's best interests to build your IoT service platform on robust cloud infrastructure, so you can scale infinitely as your business grows with your new IoT product.While ""software is eating the world"" as Marc Andreessen said, consumers and companies still purchase a lot of physical things. If you build a robust IoT service platform, you obtain insights about how your customers use your IoT products and services. With a great IoT service platform you can manage post-transaction relationships in new and engaging ways.Because service platforms store and make decisions based on data collected from all types of IoT devices, they are often considered the backbone of post-transactions relationships. What if you reached out to customers who never powered on your IoT device and proactively on-boarded them? What if you used anonymized data from customers getting the most value out of your product to help other customers unlock more business value?Now is the time to build your IoT product because sensors keep getting smaller and network connectivity solutions keep getting better. Create a plan to engage with your customers and facilitate goal-oriented post-transaction relationships, leading to new opportunities to turn a single transaction into a strong relationship.How to extract value from the Thing Stack?The Thing Stack isn't just for emerging companies or technology companies. The Thing Stack will revolutionize your industry and create efficiencies and new products your customers love. With end-to-end IoT solutions, you can now redefine your relationship customers and create new data-driven goal oriented outcomes. When you can measure everything, you can identify problems your customers have early and intervene to create positive outcomes.Now that you understand the Thing Stack, it's up to you to create an IoT product that changes the way you interact with your customers.","37,422 followers",Xavier Amatriain,629,297,8.4M,https://www.quora.com/What-platform-will-Internet-of-Things-software-be-built-on
10,"Due to our innate fascination with novelty, people are always talking about ""the next big thing."" While this kind of talk is prevalent in all industries and niches, it's most common in the technology industry because technology changes and advances every day. While your industry may not be as volatile or prone to change as the tech industry, technology driven change is coming to your industry via new products and services enabled by theRecently, in the world of technology, there has been a substantial buzz about the Internet of Things and you should pay attention too.Due to our innate fascination with novelty, people are always talking about ""the next big thing."" While this kind of talk is prevalent in all industries and niches, it's most common in the technology industry because technology changes and advances every day. While your industry may not be as volatile or prone to change as the tech industry, technology driven change is coming to your industry via new products and services enabled by theRecently, in the world of technology, there has been a substantial buzz about the Internet of Things and you should pay attention too. Experts and researchers agree the Internet of Things will bring significant change to both your personal and professional lives in the years to come. The tech stack that powers the internet of things — or Thing Stack as we like to call it — enables your company to create new products and services, which help you differentiate your offerings from competitors.What is the Internet of Things?The Internet of Things refers to a network of internet-connected objects like vehicles, devices and buildings. Objects are embedded with sensors and electronics to allow them to both collect and transfer information to your cloud database. The Internet of Things allows objects produced by your company to be detected and controlled remotely via existing network infrastructure. This in turn creates the opportunity for a direct integration between your physical and digital worlds. Automated IoT systems gather, report and crunch your data faster and more accurately than humans who manually gather and enter information into your database. The end result is a system that provides value to your company in new and exciting ways.IoTWhat is a technology stack?Traditionally, the adoption of innovative technologies accelerates after frameworks, languages, protocols and standards are defined. Each layer in a technology stack needs to integrate and communicate with the other layers of the stack. As a tech stack matures, it becomes easier and less expensive for your developers — if you have them — to create new products and services.The IoT stack is rapidly developing and maturing into the Thing Stack. This Thing Stack consists of three technology layers: sensors, microcontrollers and internet connectivity, and service platforms.New solutions, choices, and technologies are developing and emerging rapidly in each of the three layers because use cases differ based on industry, price point, object size, processor speed, power requirements and networking constraints. For example, a utility application intended to monitor a smart meter doesn't have the same connectivity requirements as a healthcare application designed to monitor a patient's heart rate.Your enterpriseLayer 1: SensorsSensors have been used for years in a number of different industry contexts like healthcare, aviation, manufacturing and automotive. Now, sensors are so tiny and inexpensive they can be embedded in all the devices you use personally and professionally. The sensor layer of the IoT tech stack continues to expand as internet connected sensors are added to new products and services.Besides incorporating sensors into your smartphones and tablets, your innovative competitors are introducing new devices that contain numerous sensors. These sensors don't need to be connected directly to the internet and they sync with your smartphone via Bluetooth LE to send captured data to the cloud. For example, Sensordrone is a Kickstarter project that embeds many environmental sensors into a small dongle. Some of the environmental sensors include color intensity, humidity, gas, and pressure sensors. The dongle collects information about your physical environment and sends this information to your smartphone or tablet via Bluetooth. This example demonstrates how value can be created by new services that use sensors to gather new types of data from your physical environment.Another category of sensors are embedded in watches, contact lenses, wristbands, and fabrics. Recently, Nokia patented a technique for magnetic tattoos that vibrate from incoming messages or calls. This is possible by spray tattooing or stamping a material onto your skin. The material is then paired with a smartphone or tablet, which lets you interact with the sensor. Microsoft and University of Washington researchers are working on another way to connect sensors to your body through the use of IoT contact lenses that provide real-time updates about the biochemical fluctuations in your body. One use case is to help diabetes patients monitor their insulin levels while using these contact lenses.Layer 2: Microcontrollers and internet connectivityThe second layer in the Internet of Things technology stack allows for local storage, data processing and internet connectivity. The Internet of Things needs internet connectivity to send collected data to your cloud database. Because some sensors generate over 10,000 data points per second, it makes sense to pre-process data locally before sending it to your cloud database. By analyzing, extracting and summarizing your collected data before you send it to your cloud database, you reduce the volume of unnecessary data you send to and store on your cloud database, saving you money on data transfer and storage costs.Your microcontroller is a small computer embedded within a chip and it helps your IoT device store and pre-process collected data before it's synced to your cloud database. Your microcontroller possesses a processor, a small amount of RAM to hold data, some kilobytes of EPROM or flash memory to hold embedded software, and solid-date memory to cache data.In some cases, your IoT device may need to use programmable microcontrollers to take action and turn something on or off. In most cases, these decisions are made via a cloud application, but it makes sense to use programmable microcontrollers when a sensor detects something that could affect the health and safety of your end customers.The main and most important capability of this layer is networking, which is either wireless or wired. If a device is stationary and can access an external power source, a wired network is sufficient, but a wired network doesn't make sense for many IoT use cases because physical cables are needed to connect to the network. WiFi, wireless modems, and wireless mesh networks are the most common ways IoT devices are connected to the internet.If you plan to manufacture an IoT device you must keep in mind dependencies for your use cases. Is your device mobile or fixed? Does your device need a battery or is it connected to a fixed power supply? How much data do you need to transfer to your cloud database per hour? Should your device's connectivity be episodic or continuous?Devices you use to track your health and fitness while bicycling, running, and exercising store data while you're active, and these devices use episodic connectivity. Your device then syncs with the cloud when it's close to your smartphone or tablet. Compare this to the continuous connectivity needed by Amazon Echo's voice based digital assistant who is always listening for your commands, fetching answers from the internet the instant you ask a question. Depending on your IoT product's use cases, you may need continuous connectivity.When you research Think Stack vendors, you'll notice a wide range of different networking protocols, hardware, software, and architectures are used to build IoT products. Due to the variation in use cases and environments, you have many choices when it comes to adding networking and computing capabilities your IoT device. While some vendors focus more on hardware components, other vendors provide a system of integrated software and hardware. Sometimes, IoT software solutions spill into the third layer of the Thing Stack, which is referred to as the service platform.Layer 3: Service platformsThe first two layers for the Thing Stack embed sensor and microcomputers in your IoT device, but your IoT product profits from the service platform layer. This layer delivers value to your customers by automating processes and delivering rich data analytics. Your cloud application combines data collected from numerous IoT sensors with your (or your customers) other business data to produce insights that generate business value.It's important for your service platform to create a feedback loop between your IoT devices and you device management software, so you and your customers can upgrade, monitor, and maintain the firmware on each the device. In most cases, service platforms operate on cloud infrastructure and utilize a multi-tenant software architecture to deliver a seamless software-as-a-service (SaaS) experience.The convergence between our digital and physical worlds stresses your IT operations by increasing demand for data management, storage, tagging and analysis. It's in your company's best interests to build your IoT service platform on robust cloud infrastructure, so you can scale infinitely as your business grows with your new IoT product.While ""software is eating the world"" as Marc Andreessen said, consumers and companies still purchase a lot of physical things. If you build a robust IoT service platform, you obtain insights about how your customers use your IoT products and services. With a great IoT service platform you can manage post-transaction relationships in new and engaging ways.Because service platforms store and make decisions based on data collected from all types of IoT devices, they are often considered the backbone of post-transactions relationships. What if you reached out to customers who never powered on your IoT device and proactively on-boarded them? What if you used anonymized data from customers getting the most value out of your product to help other customers unlock more business value?Now is the time to build your IoT product because sensors keep getting smaller and network connectivity solutions keep getting better. Create a plan to engage with your customers and facilitate goal-oriented post-transaction relationships, leading to new opportunities to turn a single transaction into a strong relationship.How to extract value from the Thing Stack?The Thing Stack isn't just for emerging companies or technology companies. The Thing Stack will revolutionize your industry and create efficiencies and new products your customers love. With end-to-end IoT solutions, you can now redefine your relationship customers and create new data-driven goal oriented outcomes. When you can measure everything, you can identify problems your customers have early and intervene to create positive outcomes.Now that you understand the Thing Stack, it's up to you to create an IoT product that changes the way you interact with your customers.",18 followers,Asim Qureshi,1.6K,996,155.4M,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
11,"Depends upon following:Typical IoT platforms runs on cloud, expose HTTP/MQTT/CoAP/AMQP interfaces to devices, ingest data and store it along with doing some real time analytics. There are plenty of them available already. AWS IoT, IBM BlueMix, Microsoft Azure, and the list goes very very very long.In case you want to still build you own, you need to think about connectivity, protocols, Analytics, Storage and User Interface.If you want to expose an MQTT front end to devices, have a look at Eclipse Paho and MosquittoDepends upon following:Typical IoT platforms runs on cloud, expose HTTP/MQTT/CoAP/AMQP interfaces to devices, ingest data and store it along with doing some real time analytics. There are plenty of them available already. AWS IoT, IBM BlueMix, Microsoft Azure, and the list goes very very very long.In case you want to still build you own, you need to think about connectivity, protocols, Analytics, Storage and User Interface.If you want to expose an MQTT front end to devices, have a look at Eclipse Paho and Mosquitto broker.If you are building a CoAP based framework, have a look at Eclipse CaliforniumThe market is literally flooded with startups building IoT platforms.",650 followers,Ryan McKillen,724,0,0,https://www.quora.com/What-is-the-difference-between-Internet-of-things-and-machine-learning-and-which-one-should-I-learn-first
