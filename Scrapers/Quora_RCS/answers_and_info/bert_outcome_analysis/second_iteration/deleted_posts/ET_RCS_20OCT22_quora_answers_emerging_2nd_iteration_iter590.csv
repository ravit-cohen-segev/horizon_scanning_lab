,Answer,followerCount,name,upvoteCount,answerCount,answerViews,question
0,"You can be productive as a developer using the following strategies:I use MeaVana to be productive. MeaVana has a timer that encourages me to complete my tasks in less time. MeaVana also has a notepad and to-do list that allow me to plan things out ahead of time, which also allows me to finish my tasks more quickly.You can be productive as a developer using the following strategies:I use MeaVana to be productive. MeaVana has a timer that encourages me to complete my tasks in less time. MeaVana also has a notepad and to-do list that allow me to plan things out ahead of time, which also allows me to finish my tasks more quickly.","21,731 followers",Glyn Williams,2.8K,9.1K,53M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
1,"Jonathan Blow is an impressive developer.  It's hard to imagine just how productive he is.    He is an independent game developer. To make this sort of project you have to be aboutNot only has he single-handedly made game projects with huge amounts of code and content.  But he's now developing a new language as a sideline.In this talk (below) he describes his programming aesthetics. How toIn this talk (below) he describes his programming aesthetics. How toJonathan Blow is an impressive developer.  It's hard to imagine just how productive he is.    He is an independent game developer. To make this sort of project you have to be aboutNot only has he single-handedly made game projects with huge amounts of code and content.  But he's now developing a new language as a sideline.In this talk (below) he describes his programming aesthetics. How to write code effectively.In this talk (below) he describes his programming aesthetics. How to write code effectively.The talk is worth watching but I will try to summarise it. (and made it into 5 points)1) Don't optimize.2) Do optimize for simplicity3) Much fancy academic CS is bogus4) The simplest abstractions are usually bestMe: I think a lot of new programmers like to use advanced data structures and advanced language features as a way of demonstrating their ability.  I call it the lion-tamer syndrome.  Such demonstrations are impressive, but unless they actually translate into real wins for the project, avoid them.With each new class/method added to your code, the complexity can increase not linearly but exponentially.    Deleting code is therefore always better than adding code.   Don't put stuff into functions when it could be inline.5) Don't write generalised code","44,239 followers",Kurt Guntheroth,747,13.7K,166.8M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
2,1. Always spend more time on design than implementation.,"5,608 followers",Andrei Å¢aga,1K,315,8.8M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
3,I have three:1. Don't chase your tail2. Sleep.3. Consider your code's future.,30 followers,Robin Thomas,8.6K,731,13.7M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
4,"1)A good developer knows exactly how to use his/her tools to maximize the amount of time spent creating a solution. If you can conjure up a magic key press that loads in your project, cleans the build then rebuilds your solution in half the time, then it's worth your while to do it. You might only save 3 key presses, but at 10ms each that's 30ms extra thinking time to be ready for the build being finished.The best solutions produce the maximum amount of output for the least amount of input, but without sacrificing quality (In other words, don't cut corners in the process)21)A good developer knows exactly how to use his/her tools to maximize the amount of time spent creating a solution. If you can conjure up a magic key press that loads in your project, cleans the build then rebuilds your solution in half the time, then it's worth your while to do it. You might only save 3 key presses, but at 10ms each that's 30ms extra thinking time to be ready for the build being finished.The best solutions produce the maximum amount of output for the least amount of input, but without sacrificing quality (In other words, don't cut corners in the process)2)If you can put it in a shell script, then do so, tools like grunt, gulp and plethora of others go a long way to helping with this, but don't stop there. Why not for example get your git hooks to automatically run a grunt task when you check something in?3)An hour and a half works for me, others may vary, but take regular breaks, even if it's just to walk across the office and stare out the window at an empty sky for 5 minutes, it gives your brain a chance to calm down a little and perform a pseudo semi reset on itself. If you spend to long concentrating on a singular thing you'll get the programmer's equivalent of writers block, I call it ""Code Blindness"", don't know if that's a thing or not though.4)If you're up against a bit of code that's defeating you, or you just can't quite see how you can make the latest crazy requirement work, then don't try to solve it. The human brain breaks down under pressure, irrespective of how well you believe you are at ""Handling Pressure"", always have at least 2 to 3 other bits of code you can work on, generally something like maintenance tasks or low key projects that don't require too much thought.You'll often find that your cognitive process will churn away in your subconsciousness and solve the problem on its own, in its own time eventually leading you to just being able to sit down and solve things in a short space of time.5)Kind of related to number 4, but not always.You NEVER know when you're going to get a penny drop moment. It might be a major vision about some crazy new technology that the world sorely needs, or it might just be a novel way of re-writing an algorithm you created 2 weeks earlier, that you can now re-write to be more efficient.What ever it is, you need to record it. Be prepared to take notes whenever, wherever.I go through notebooks like they're going out of fashion, and I have (had until I started scanning them all in to my PC) drawers full of the darn things, I've been jotting down notes, ideas potential future solutions for most of my career, and often when I'm looking for a solution, I'll find inspiration just by picking some notes at random and reading through them.A great elegant solution inspired by your notes helps satisfy point number 1, which often leads to being able to help with number 2, many of these inspiration moments are coined in steps 3 & 4, and recorded in step 5, which goes around full circle back to step 1.Source of my answer:","12,557 followers",Abishiekh Jain,11.7K,590,4.4M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
5,"Never, ever, ever read e-mails first thing in the morningAvoid meetings if you canEliminate distractionNever, ever, ever read e-mails first thing in the morningAvoid meetings if you canEliminate distractionPrepare a list of tasks to do the night beforeDo the most important tasks first","17,186 followers",Sean Lana,7K,718,36.1M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
6,"Looking through some of the answers, I've been inspired to tack on some more suggestions. Here is a list that I have.Looking through some of the answers, I've been inspired to tack on some more suggestions. Here is a list that I have.",522 followers,Mitch Rees-Jones,2.4K,0,0,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
7,"1 Keep Your Tasks Organised and Prioritised:2 Think Twice Before Writing Code:Related joke about abstract thinking fromAt an interview, a programmer1 Keep Your Tasks Organised and Prioritised:2 Think Twice Before Writing Code:Related joke about abstract thinking fromAt an interview, a programmer is asked what he would do if the microwave would catch fire. He says he would throw it out the window. Baffled, the interviewer asks ""okay, what if the coffee brewer catches fire?"" And the programmer replies ""Put it in the microwave and throw it out the window, as we already have a solution for that problem.""Abstract thinking and software patterns allow you to transform problems into already solved ones. It also helps to increase code re-usability, if necessary.I refer to3 Automate Repetitive Tasks:4 Don't Work More Than Your Threshold:Then, I have to go back the next morning and refactor all the naughty things I did the day before. That's double work!5 Focus, focus and focus:Unsubscribe from marketing emails so when you check your inbox, you will see less irrelevant stuff. When was last time you purchased something from a marketing email? It feels so good to unsubscribe!Internet is a massive distraction so use Chrome's Stayfocusd extension to restrict access to: Fb, Twitter, Quora, etc...I use noise cancelling headphones and I listen to focus music such:sea sound ('it reminds me of home') or one of theI prefer to work without music as long as I'm in a quiet environment but sometimes it's not possible.All these things create a distraction free environment and it works well for me as I'm a person who gets distracted easily.I hope it helps!",2 followers,John Nofsinger,8.6K,3.1K,14.7M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
8,"I would not categorise myself as a great programmer as I have been writing production quality code for just two years now. But I would like to share some tips that I have learnt over these two years that have made me more productive.1.Due to the prolI would not categorise myself as a great programmer as I have been writing production quality code for just two years now. But I would like to share some tips that I have learnt over these two years that have made me more productive.1.Due to the proliferation of web and mobile technologies it has become much easier for developers to hack together a prototype without giving much thought into code design. This mentality is carried out in the jobs as well but we need to understand that there is a lot of difference between a prototype and a full-fledged production system.I have started giving more emphasis on code design and structure. It may have increased the time taken to write code, but  it has saved me a lot of time that was previously wasted on refactoring and finding out the source of bugs.2.A lot of times we ignore automation as we are lazy to set it up or we think that it will not be of much use. But automation can save you a lot of time. If you are spending 30 minutes on something per day that can be automated you can save around 10 hours a month or 120 hours a year, if you are willing to give 4-5 hours to automate it.I have automated a lot of my workflows over the past month and now whenever I see an opportunity that a particular repetitive task can be automated, I go ahead and automate that first. This has contributed a lot to my productivity.3.I also used to think that why should I buy a book when I can learn everything from web. But I was wrong. A good book written by an experienced developer can lead to a lot more improvement than any online tutorial or course. The book goes into the depth of  topics and give you a lot of insights that why the author choose to implement it in a particular way.The book takes you on a journey of the developer and tells you about the mistakes which he made during his working years. This can save you a lot of time if you do not make the same mistakes.4.You must try to choose someone who is not part of your team but someone you admire a lot. He/She preferably must have a similar career path that you aspire for.A good mentor can save you a lot of time and help you make important decisions as he might have been through the same things at some point in his life. If you cannot find someone in your company try reaching out to someone on the web. A lot of great developers will be willing to help you if you willing to reach out to them.5.You must be very careful while choosing the right tools and libraries for your project. Do not use a library that is quite recent and has not been tested much in production, as it can come to bite you and become a source of issues that will be very difficult to debug afterwards.Invest your time and money in learning tools like git, jenkins etc that can save you a lot of time in the long run.Do not rush yourself into writing shitty code due to pressure of deadlines. Writing good code is similar to producing great art. It takes time and patience  to become a master code craftsman. Keep yourself up to date with the latest technologies and be open to learning new things.","3,930 followers",Anumeha Sharma,37.2K,0,0,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
9,"Thank you for A2A. Most of the answers here focus on the technical aspects of the job. To give different angles, I will try to view it from less technical topics:1. Have a superb communication2. Stop checking your emaThank you for A2A. Most of the answers here focus on the technical aspects of the job. To give different angles, I will try to view it from less technical topics:1. Have a superb communication2. Stop checking your email continuously3. Document your work nicely4. Manage your time wisely(These 4 are all I can think for now. I will update this post if I could find another one. Right now, I can only think of coffee for item #5 (: ).","246,639 followers",Dushka Zapata,850,8.5K,231.5M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
10,"With reference to the top voted answer, I'm not sure why people assume there is a direct correlation between the amount of code one writes and productivity.First of all, measuring LOC throughput is really difficult in modern projects because modern tool sets tend to generate a lot of boiler plate code on behalf of the developer and there is a lot of code reuse by inclusion (as opposed to by reference) - mostly in web projects.So first, we need to define productivity and some metrics that can be objectively used to measure it (so we can rank developers). But that is insanely difficult to do, prWith reference to the top voted answer, I'm not sure why people assume there is a direct correlation between the amount of code one writes and productivity.First of all, measuring LOC throughput is really difficult in modern projects because modern tool sets tend to generate a lot of boiler plate code on behalf of the developer and there is a lot of code reuse by inclusion (as opposed to by reference) - mostly in web projects.So first, we need to define productivity and some metrics that can be objectively used to measure it (so we can rank developers). But that is insanely difficult to do, primarily because productivity is highly subjective and because developers usually don't work alone - most work in teams.A possible metric for productivity might beIn closing, I think experience alone makes the biggest impact on productivity. The longer you practice developing software solutions, the more knowledge you accumulate, the easier it will become to produce quality software.But there are some things that can certainly help productivity as a side effect:- don't optimize prematurely","118,701 followers",Kalpit Veerwal,5.9K,357,22.5M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
11,"May I suggest these five tips (that have nothing to do with your programming skills) since we are living in the social-media syndrome era:1. Ban yourself fromMay I suggest these five tips (that have nothing to do with your programming skills) since we are living in the social-media syndrome era:1. Ban yourself fromIt worked for me, I now have 5-6 years since I've done this and it keeps me focused without major distractions.Oh and by the way, change your entire work focus to the motto: ""KISS and Just finish it"". You can and will write tests later when the stuff is actually working.I find myself writing working code fast. Then after the first iteration when I engage with the tests and all the code looks totally different but does the same thing!I think both programmers and dev leads tend to forget that you have to keep the code as simple as possible otherwise its a red flag.I have to admit that there are programmers out there who like to complicate things, because it gives them a sense that they are actually working on something ...","1,892 followers",Athanasios Canko,14.5K,318,2.9M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
12,"Note: I actually did this and it worked.Write down what you are spending your time doing, every 15 minutes, all work-day long, for two weeks. Now look at the list. You spent some of that time planning, designing, writing, and testing software. What did you do with the rest of the time? You spent it in meetings. you spent it chatting with friends. You spent it on facebook or instagram.You can record the time you begin a task, and record again when you change tasks, but be fair. Even a brief interruption or a trip to the bathroom should go in the log. Initially, Iâd set a timer for a periodic 15Note: I actually did this and it worked.Write down what you are spending your time doing, every 15 minutes, all work-day long, for two weeks. Now look at the list. You spent some of that time planning, designing, writing, and testing software. What did you do with the rest of the time? You spent it in meetings. you spent it chatting with friends. You spent it on facebook or instagram.You can record the time you begin a task, and record again when you change tasks, but be fair. Even a brief interruption or a trip to the bathroom should go in the log. Initially, Iâd set a timer for a periodic 15 minute chirp, but you can go to a task-based record to reduce the distraction of the recording itself. Remember, you arenât doing this forever, just for awhile.Now, ruthlessly cut out all those activities that are not writing software. Donât go to meetings unless your attendance is mandatory, and try to weasel out of those too. Every time you see yourself starting a non-software activities, remind yourself that you must not.As you do this, go on measuring your time use. Youâll get better at this as you go along, so that the timekeeping task takes less time. Review your time log once a week and total up your daily productive time, to see if you are still improving.You can probably double the number of hours each day that you spend on your core activities. I did. It was lonely, but I was in a place in my life where productivity was important, so I stuck with it.Fred Brooks had his staff at IBM do this, and they discovered they only spent 19% of their day on core activities. My own experience bore that out. I was able to get up to 60% on core tasks by this method.","90,938 followers",Divyansh Mundra,6.4K,1.2K,61.7M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
13,(In no particular order)BONUS:,"35,791 followers",Rafael Eliassen,741,631,36M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
14,"1. Create a bijection between the real life object and the programming object, so that no state of the real life object has no corresponding state in the programming object and vice versa.2. When real life objects are immutable, make sure your programming objects are also immutable. For example: dates.3. Build always complete objects and make sure that objects are always valid. Otherwise they throw exceptions when being built. No misterious return codes, because the developer might obviate them.4. Don't use nulls, but the Null Object Pattern.5. Use atomic updates.Stolen from Hernan Wilkinson.99",17 followers,Steve Taylor,3.9K,2.3K,25.8M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
15,Thanks for A2AMy hints are as follows:Thanks for A2AMy hints are as follows:,4 followers,Ameya Deshmukh,629,58,246K,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
16,"You never wait.But you don't need a high end computer for this. I mimic the experience with my Puppy Linux workstation running on a 10-year old Core2Duo laptop from 2006.It boots in 18 seconds from a USB 2.0 flash drive. Once booted, my entire operating system runs in RAM. The hard drive in this computer is broken and I am too lazy to replace it. My browser runs in RAM, my cache is in RAM and so on. My system periodically dumps my RAM into persYou never wait.But you don't need a high end computer for this. I mimic the experience with my Puppy Linux workstation running on a 10-year old Core2Duo laptop from 2006.It boots in 18 seconds from a USB 2.0 flash drive. Once booted, my entire operating system runs in RAM. The hard drive in this computer is broken and I am too lazy to replace it. My browser runs in RAM, my cache is in RAM and so on. My system periodically dumps my RAM into persistent cache on the USB stick but that happens only every few hours. \4GB of RAM is enough to run at least 20 tabs of Chrome super-fast. Once you run out of RAM, you have a problem... It taught me good tab management habits. ;)You would never believe how old it was until I showed you the laptop connected to the screen. The only slowdowns I see are related to Internet connectivity, namely DNS lookups. I can use Word, and especially Excel, to do things that would require a very powerful computer. ;)I also have a cluster of IBM x366This is serious business. Each computer weighs about 85lbs. It's my personal cloud and render farm. I can bring up VMs instantly. They are backed by a SAS 15K RPM array. That's not quite SSD, which I also use on my laptops, but believe me they are insanely quick.I can have far more power than this in a battery powered laptop today. This is a Pentium 4 generation machine with four discrete 130W Xeon CPUs. It works great as a space heater. Long live multicore technology. :)As for me, my next monster computer is going to be a gaming laptop. With a GTX 980M or whatever the next top of the line will be. Because I want one. And I'll run Vim on it in full screen mode. ;)","75,315 followers",Charissa Enget,31.7K,874,75M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
17,"The rig on my desk at home is something I put together to do 3D work...Is an i7-5960X overkill for writing Quora answers and surfing Zulilly for a new dress? Yeah, it's overkill. But...IThe rig on my desk at home is something I put together to do 3D work...Is an i7-5960X overkill for writing Quora answers and surfing Zulilly for a new dress? Yeah, it's overkill. But...IWhen I go to work, I have a Lenovo M93 on my desk with half the RAM, and a dual core i5 (at least it's hyper threaded.) I've choked Excel on large data sets. I shut down things I'm not using. I get frustrated when I'm shopping for, I don't know... some new model of laptop or a server or whatever other piece of miscellaneous IT gear I need to source and things get bogged down because I'm treating it like my rig at home.My personal laptop is also a really low end thing that I use just about exclusively for writing on Quora and other web tasks. It still has a spinning drive... I kind of cringe at anything I do that touches the disk.Having a high end machine available for use can",10 followers,Sajeev Rajan,7K,1.5K,46M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
18,"Very interesting question! I spend a lot of time working on some pretty powerful workstations, everything from 44-core systems to boxes with 1 TB of RAM:However these servers aren't what I work on everyday. My daily driver is a self assembled cross-desk running an i7â6850k, 16GB x 4 of RAM at 3200MHz, Dual GTX 1080s around 9TB of Storage and 1.5TB of SSDs. Everything is liquid cooled using painstakingly bent hard tubing. Here's a picture:I wish my workspace looked like that while I'm actually working and not clicking pictures :PThere's also some(For this image IVery interesting question! I spend a lot of time working on some pretty powerful workstations, everything from 44-core systems to boxes with 1 TB of RAM:However these servers aren't what I work on everyday. My daily driver is a self assembled cross-desk running an i7â6850k, 16GB x 4 of RAM at 3200MHz, Dual GTX 1080s around 9TB of Storage and 1.5TB of SSDs. Everything is liquid cooled using painstakingly bent hard tubing. Here's a picture:I wish my workspace looked like that while I'm actually working and not clicking pictures :PThere's also some(For this image I benched at 1GB and later changed the file-size to 100MB for some reason before screenshotting.)Everything runs extremely fast. You don't face any noticeable lag while multitasking, you can effortlessly switch between 40â50 minimized windows, over a 100 browser tabs, run >50 VMs (I'm obviously talking about the 44-core and the 1TB RAM systems here). I do some heavy hash-cracking on these as well as well as some light games (this is surprisingly something I get asked all the time!).But at the end of the day, for day-to-day tasks, the cost to performance ratio you can actuallyBut if you're talking about expensive components, the biggest difference however is made by fast storage. Switch from a 5400rpm HDD to a PCIe NVMe SSD and you'll be flying at light speed. RAM usually falls off past 16 gigs for most regular or light workloads. And a 4/6 physical core i7 is probably all you'll ever need for that as well.",211 followers,Nishant Sharma,17.5K,56,8.2M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
19,"I think around the point where you're at a desktop class quad core and a graphics card that can game on Ultra 1080p, you reach a point where anything faster makes almost no difference to the speed that everyday tasks happen at since they are already blazing fast.My build is way less intense and far less expensive than many of the others listed here, but I went for price/performance over just perfI think around the point where you're at a desktop class quad core and a graphics card that can game on Ultra 1080p, you reach a point where anything faster makes almost no difference to the speed that everyday tasks happen at since they are already blazing fast.My build is way less intense and far less expensive than many of the others listed here, but I went for price/performance over just performance. I have upgraded everything but the RAM from my original system so while my RAM is over 3 years old and still going strong, the rest of my system is relatively new. Were I to put it all together today brand new I could get equivalent hardware for maybe $1000 for the PC alone.I chose to go Mini-ITX despite the price premium as this is a Dorm PC. I use it for programming, CAD, gaming, music, TV, photo editing and a bit of video/audio editing, plus all everyday tasks and schoolwork.8GB RAM has never held me back from having like 30 tabs open with no lag, and with an SSD boot drive it takes about as long to boot up as to wake from sleep. Basically I tell people ""sure, spend $1500 on a new Macbook. Or, you know get this AND a decent PC laptop."" [Mind you these are people who confuse memory with storage, so when they first see the dual monitors they usually ask why I have two computers, and I'm just like (-_-)) nope.]Opening two apps on my left monitor and a third on my right is never an issue, it makes research papers a breeze as I can have EasyBib, 17 potential sources, Word, Google Docs, and Gmail all open at once. CAD modelling based off pictures is also really easy to do for the same reason, and same for programming with documentation on the other screen.Using DDR3 1333 definitely impacted benchmarks, but my i5-4690K Quad Core and Sapphire factory OC R9 380X can handle anything I throw at it like a dream.Not too many people at my University have custom PCs, and those that do usually had all the money in the world unlike me, but I focussed on the best bang for my buck, not the best. The result is still amazing to use. I have been trying to get more people to convert to the PC Master Race and usually I succeed each time a Mac user sees me drag a window from my left monitor to my right and keep using apps on the left :) .Possibly the best thing about my personal build though is the storage. I have fucktons of storage. I currently have 2TB of FREE SPACE. So sorry, those of you like my roommate who paid $2500 for a Macbook Pro with 512 GB of SSD storage, only 70% of which is usable. I have a 256GB SSD plus two 2TB drives, one of which is a WD Black gaming HDD and the other a Seagate Barracuda media storage drive, so I get the best of all possible worlds. I have all my apps including CAD software on the SSD but all games and media on the HDDs, so every ap...",18 followers,Asim Qureshi,6.3K,996,155.4M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
20,"This is my current sysytem.It has 32 gb DDR3 1600 mhz CL 10 ram memorycore i7 2600K cpu runs at 4.5 GHZ2x sata 3 SSD (SSD 850 evo) as raid 0 : approx read write 1 GB per sec2x sata 2, 3 TB as raid 1 : for valuable data storage2TB, 3TB and 1.5TB other storage HDDsgeforce gtx 470 : hopefully will upgrade soon to RX48024 inc and 22 inc monitorsIs my system is sufficient at the moment? well not at all. I am doing research on sentiment analysis (classification) and record linkage (clustering) algorithms and my 8 core cpu was always 100% running 7/24I wish i had like 80 core or even more :( when runThis is my current sysytem.It has 32 gb DDR3 1600 mhz CL 10 ram memorycore i7 2600K cpu runs at 4.5 GHZ2x sata 3 SSD (SSD 850 evo) as raid 0 : approx read write 1 GB per sec2x sata 2, 3 TB as raid 1 : for valuable data storage2TB, 3TB and 1.5TB other storage HDDsgeforce gtx 470 : hopefully will upgrade soon to RX48024 inc and 22 inc monitorsIs my system is sufficient at the moment? well not at all. I am doing research on sentiment analysis (classification) and record linkage (clustering) algorithms and my 8 core cpu was always 100% running 7/24I wish i had like 80 core or even more :( when running experiments, it is all about ram and cpu core numberas for daily job, what makes the biggest difference is the harddisk speed. you have to get a decent SSD. then the clock speed of the CPU since many daily things uses single thread. I always use overclocked. so this computer is super fast when compared to any other non-SSD system.as for games, i dont play games recently due to being busy. but if i can manage to complete my phd thesis, i may give it a try and upgrade my graphic card to rx 480 or gtx 1060I need to upgrade my cpu but which is better than mine costs too much currently. Because i have to get at least 6 physical cores total 12 cores CPUs for an upgrade.Thanks Allah i have all these and they continue to work without failure",223 followers,Sanidhya Singh,1.2K,139,4.5M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
21,"There's a certain threshold where adding more performance in certain areas won't help in everyday tasks. Disk speed is probably the only area where you will always see a performance increase.My personal computer has an Intel Core i7-4790, 16GB of RAM, a 4GB GTX 960, and a 1TB SSD. A computer like that would probably retail around $1200-1500Most of the time, like I said, you won't notice that much of a performance increase in everyday tasks over a normal computer. I'm a pretty heavy multitasker, I regularly have over a dozen tabs open in my browser including things like streaming music. While dThere's a certain threshold where adding more performance in certain areas won't help in everyday tasks. Disk speed is probably the only area where you will always see a performance increase.My personal computer has an Intel Core i7-4790, 16GB of RAM, a 4GB GTX 960, and a 1TB SSD. A computer like that would probably retail around $1200-1500Most of the time, like I said, you won't notice that much of a performance increase in everyday tasks over a normal computer. I'm a pretty heavy multitasker, I regularly have over a dozen tabs open in my browser including things like streaming music. While doing all that, my CPU is only at about 8% usage and is throttled down to 2.0GHz, and I'm only using about 5GB of RAM. So clearly most of the performance in my computer isn't even at use.The one thing in my computer that really boosts performance, as I alluded to earlier, is my SSD. Most everyday tasks are heavily dependent on disk speeds. For example, before a web browser can display a page, it has to cache that page. Faster disks can cache sites faster, meaning web browsing is much smoother. Bootup and logon times are also much faster.The area that having a powerful computer really helps in everyday tasks is when tasks are running in the background. I can render video files in the background on my computer and still have a smooth experience doing anything else, even gaming.","242,280 followers",Roman Saini,4.9K,315,33.3M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
22,"I spent the last two months working on a self-assembled PC to replace my laptop.Typing this answer on it right now, it feels freakishly powerful. I feel in control and free, as well as new and revitalized. I can install two things at the same time (how cool is that?). My favorites bar is twice as long as it was on my laptop, and videos don't lag.I've put a lot of work into this computer (I can list my specs if you'd like, I'm not sure what you mean by 'high-end') and it feels like it really pays off already.",2 followers,Richard Muller,2.9K,2.3K,201.9M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
23,"I work in a top tier automobile company, the main focus of my work is designing.The only difference I felt was Internet explorer doesn't crash.","40,135 followers",Sanhita Agarwal,59.7K,110,4.2M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
24,"Some great answers here:Sad to say, I'm stuck with a couple of Core2Some great answers here:Sad to say, I'm stuck with a couple of Core2 Intel CPU Systems with 8x the internal memory and 8x the processing power of this beauty. (Not counting the NVIDIA GPUs!) Sigh!",49 followers,Awdhesh Singh,1.3K,5.3K,218.8M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
25,"It feels terrific.Instead of limiting myself to 10 or 20 tabs in my browser, I can have several dozen. Or over a hundred. Right now I have 139, of which at least 20 are different quora pages. Plus I can play a game with all of those tabs loaded in the background. Since the game is installed on my SSD, it loads in a quarter of the time than on a hard drive. This saves anywhere from 5 to 120 seconds, depending on the game. Websites load faster too.With my 25-inch 1440p monitor, I can have 4 different programs open, one in each corner of my screen, or have a movie playing on the left half and a gIt feels terrific.Instead of limiting myself to 10 or 20 tabs in my browser, I can have several dozen. Or over a hundred. Right now I have 139, of which at least 20 are different quora pages. Plus I can play a game with all of those tabs loaded in the background. Since the game is installed on my SSD, it loads in a quarter of the time than on a hard drive. This saves anywhere from 5 to 120 seconds, depending on the game. Websites load faster too.With my 25-inch 1440p monitor, I can have 4 different programs open, one in each corner of my screen, or have a movie playing on the left half and a game on the right half.  I can setup my screen in many more configurations than with a normal 15.6-inch 1080p laptop screen.Gaming mice and keyboard generally have several extra buttons which you can program for endless purposes. I can run my favourite game with the tap of a key, and I can adjust the volume with my thumb. These little things only save a second or two apiece but hey, it's a second or two saved. It's the little things.9","11,173 followers",Ty Doyle,6.2K,6.3K,49.7M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
26,"I bought a low-end-high-end computer a few years back (Core i7, 16GB memory) primarily so I could run multiple simultaneous virtual machines for testing an experimentation.So, it feels like I'm running 4 or 5 computers.It also ages very gracefully. No software I need has yet outstripped its capabilities.But for everyday use, it's no faster than my MacBook or my Core i3. The real speed boost came when I dropped in an SSD in place of the hard drive. Most of the time, you're better off spending money on more memory and faster storage rather than a faster CPU, unless you have specific CPU intensivI bought a low-end-high-end computer a few years back (Core i7, 16GB memory) primarily so I could run multiple simultaneous virtual machines for testing an experimentation.So, it feels like I'm running 4 or 5 computers.It also ages very gracefully. No software I need has yet outstripped its capabilities.But for everyday use, it's no faster than my MacBook or my Core i3. The real speed boost came when I dropped in an SSD in place of the hard drive. Most of the time, you're better off spending money on more memory and faster storage rather than a faster CPU, unless you have specific CPU intensive tasks in mind.","5,770 followers",Al Nolf,1.3K,7.3K,21.9M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
27,"I've got a pretty powerful machine set up in my office. It's got a 20 core @ 2.9 GHz processor, a pair of GTX 980TIs, 128 gigs of ram, and SSDs galore RAIDed for speed. I need it for some of the text analytics we do since it's just simple math repeated lots of times for massive amounts of data (like comparing every sentence in 20 years of a pair of academic journals). That said, we don't actually do that task all that often, it's just that when we do need it, we want it done within a few weeks and my PC can get it doing that.But for my normal activities like researching on the web and writingI've got a pretty powerful machine set up in my office. It's got a 20 core @ 2.9 GHz processor, a pair of GTX 980TIs, 128 gigs of ram, and SSDs galore RAIDed for speed. I need it for some of the text analytics we do since it's just simple math repeated lots of times for massive amounts of data (like comparing every sentence in 20 years of a pair of academic journals). That said, we don't actually do that task all that often, it's just that when we do need it, we want it done within a few weeks and my PC can get it doing that.But for my normal activities like researching on the web and writing papers it's actually not that much better than my laptop most of the time. Yes, everything opens quickly and I never get lag in any application (except from the network) but the same is true on a laptop worth 1/8th what this thing does. The biggest change I notice is that it will never care how many tabs or windows I have open or what I'm doing in the background and can switch between them faster than my eyes can keep up.That said, over winter break I installed a couple games on here to pass the time at 3 AM while I'm waiting to hear back. I could set all the graphics on their maximum settings and then set the anti-aliasing level at 16x and still get over 45 fps. At reasonable anti-aliasing like 4x my monitor becomes the limiting factor. I'm not much of a PC gamer so I can't really tell the difference but I've been told that to people who really care that kind of thing matters.",37 followers,Ankita Sinha,510,626,52.1M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
28,"âI saw a picture of a single atom. What is in the ""empty"" space between the camera and the atom?âI believe you saw a picture like this:There is really one single excited atom in the middle, emitting light, trapped in that equipment with electric and magnetic fields. Itâs in high vacuum, but that still means plenty of gas atoms and molecules between the trapped atom and the camera. Theyâre not excited and not emitting light.Note that what happens here is not really imaging the atom. No details of the atom can be discovered using visible light, that has much longer wavelength, and thus much loweâI saw a picture of a single atom. What is in the ""empty"" space between the camera and the atom?âI believe you saw a picture like this:There is really one single excited atom in the middle, emitting light, trapped in that equipment with electric and magnetic fields. Itâs in high vacuum, but that still means plenty of gas atoms and molecules between the trapped atom and the camera. Theyâre not excited and not emitting light.Note that what happens here is not really imaging the atom. No details of the atom can be discovered using visible light, that has much longer wavelength, and thus much lower spatial resolution than the dimension of the atom. Itâs somewhat similar to observing a faraway star with a telescope. It will always appear as a point-like source, and the size of the image is independent of the real size of the star. It only depends on the diffraction and other interference effects, and the quality of the optics. No details on the star surface are discernible with any practically possible telescope.When you see images like this:It was not captured with a camera. The atomic force microscope produces electronic signals from a scanning probe that is extremely close to the subject. There are no other atoms between the probe and the subject. But itâs not a camera. The image is generate from the measurement data by clever algorithms.","2,464 followers",Lucas Curtis,1.3K,5.2K,10.4M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
29,"The first thing to realize is that there is no camera.Atoms are too small to be captured on cameras, because cameras work with visible light. Visible light can only be used to look at things whose size is at least as large as the wavelength of the light. The smallest wavelength of light you can see with your eyes is about 400 nanometers. Atoms are way smaller than thatâ¦usually about a tenth of a nanometer.So if you canât use a camera, how do you see an atom? You sort of have toAn atomic force microscope uses a very fine tip â maybe an atom wide â and drags it across the surface beThe first thing to realize is that there is no camera.Atoms are too small to be captured on cameras, because cameras work with visible light. Visible light can only be used to look at things whose size is at least as large as the wavelength of the light. The smallest wavelength of light you can see with your eyes is about 400 nanometers. Atoms are way smaller than thatâ¦usually about a tenth of a nanometer.So if you canât use a camera, how do you see an atom? You sort of have toAn atomic force microscope uses a very fine tip â maybe an atom wide â and drags it across the surface being scanned. As the tip moves, it gets bumped up and down by the atoms it passes over. Super-precise lasers measure the position of the tip, and a computer decodes their movements as information about the structure of the sample.Hereâs a (poor) analogy that shows you the difference between a camera image and an atomic force micrograph.Suppose youâre sitting at a table, blindfolded. An unknown object is placed on the table in front of you.If you remove your blindfold and look directly at the object, thatâs like taking a picture with a camera. You get all the information at once.But suppose youâre not allowed to take off your blindfold. Instead, youâre given a pin which you must carefully drag across the tabletop, point down, making a mental note of whenever you feel the pin getting bumped up and down by any obstacles. Then, you must use this data to build a mental map of what the object on the table looks like. Thatâs more like an atomic force micrograph.Because the tip of the atomic force microscope isThatâs why you donât see air molecules in âpicturesâ of atoms. Itâs not a snapshot taken by a camera some distance away from the sample. Itâs a computerâs interpretation of what it felt when it scraped the worldâs tiniest needle across the surface of the sample.","220,160 followers",Franklin Veaux,8.7K,47.3K,779.5M,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
30,"You never see a âphotographâ of a âsingle atomâ and you do not need to.You never see a âphotographâ of a âsingle atomâ and you do not need to.And right there that absurd statement tells you what some of the problem is in describing what is happening.So now that you have a basic understanding of what an electron is - we need to explain what you are actually âseeingâ when we see the âimageâ of the atoms in the lead crystal being generated by electrons being âbouncedâ off of them.But no! You had to ask me on Quora, and this is actually a very very good question, that is at the heart of so much of quantum theory.I know you think I am contradicting myself, but just think how you think of âemptyâ.The newpaper reporter goes to the courtroom trial of someone famous, but comes back to report that he has nothing to report. The accused did not show up.Electron crystallography - WikipediaBut if you want to know what an atom âlooks likeâ - just look at the edge of a bit of broken glass.Glass is a liquid, not a crystal, which means there will be silicon and oxygen ions right along that edge.",32 followers,KJ Runia,745,0,0,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
31,"There is a whole lot of research and interpretation between that atom and the illustration photographed by the camera (or, much more likely, rendered with the graphics software).Obviously, you are not looking at an actual photograph of an actual atom.Atoms are much too small to resolve with equipment that, itself, is constructed of atoms. The closest weâve gotten is electron ptychography, which doesnât show the atoms but does show vague, blurry interactions of electrons with those atoms, and in a crystalline material, shows its structure when magnified 100,000,000x.So if you are looking at a pThere is a whole lot of research and interpretation between that atom and the illustration photographed by the camera (or, much more likely, rendered with the graphics software).Obviously, you are not looking at an actual photograph of an actual atom.Atoms are much too small to resolve with equipment that, itself, is constructed of atoms. The closest weâve gotten is electron ptychography, which doesnât show the atoms but does show vague, blurry interactions of electrons with those atoms, and in a crystalline material, shows its structure when magnified 100,000,000x.So if you are looking at a picture of an atom, it is a conceptual visualization (aka âartistâs conceptâ).FromImage shows an electron ptychographic reconstruction of a praseodymium orthoscandate (PrScO3) crystal, zoomed in 100 million times. Credit:",2 followers,Nathan Kaye,1K,344,480.2K,https://www.quora.com/What-are-the-5-tips-of-a-productive-developer
